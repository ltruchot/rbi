{"version":3,"file":"public/javascripts/app.js","sources":["app/application.coffee","app/collections/bank_accounts.coffee","app/collections/bank_alerts.coffee","app/collections/bank_amounts.coffee","app/collections/bank_operations.coffee","app/collections/banks.coffee","app/collections/regular_operations.coffee","app/initialize.coffee","app/lib/app_helpers.coffee","app/lib/base_view.coffee","app/lib/data_manager.coffee","app/lib/view_collection.coffee","app/models/bank.coffee","app/models/bank_account.coffee","app/models/bank_alert.coffee","app/models/bank_amount.coffee","app/models/bank_operation.coffee","app/models/regular_operation.coffee","app/models/user_configuration.coffee","app/router.coffee","app/views/alerts.coffee","app/views/app.coffee","app/views/bank_statement.coffee","app/views/bank_statement_entry.coffee","app/views/bank_title.coffee","app/views/compared_analysis.coffee","app/views/configuration.coffee","app/views/configuration_bank.coffee","app/views/configuration_bank_account.coffee","app/views/forecast_budget.coffee","app/views/forecast_budget_entry.coffee","app/views/menu.coffee","app/views/monthly_analysis.coffee","app/views/online_shopping.coffee","app/views/regular_op_statement.coffee","app/views/regular_op_statement_entry.coffee","app/views/templates/alerts.jade","app/views/templates/app.jade","app/views/templates/bank_statement_empty.jade","app/views/templates/bank_statement_entry.jade","app/views/templates/bank_statement_header.jade","app/views/templates/compared_analysis.jade","app/views/templates/configuration.jade","app/views/templates/configuration_bank_account.jade","app/views/templates/configuration_bank_empty.jade","app/views/templates/configuration_bank_title.jade","app/views/templates/forecast_budget.jade","app/views/templates/forecast_budget_entry.jade","app/views/templates/menu.jade","app/views/templates/monthly_analysis.jade","app/views/templates/online_shopping.jade","app/views/templates/regular_op_statement_empty.jade","app/views/templates/regular_op_statement_entry.jade","app/views/templates/regular_op_statement_header.jade"],"names":[],"mappingshGA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhFA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/DA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApzGA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxlpnQA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxvEA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1SA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/GA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxhxrnBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA","sourcesContent":["var AppView, BankAmountsCollection, BankOperationsCollection, BanksCollection, DataManager, RegularOperationsCollection, UserConfiguration;\n\nAppView = require('views/app');\n\nBanksCollection = require('collections/banks');\n\nBankOperationsCollection = require('collections/bank_operations');\n\nBankAmountsCollection = require('collections/bank_amounts');\n\nRegularOperationsCollection = require('collections/regular_operations');\n\nUserConfiguration = require('models/user_configuration');\n\nDataManager = require('lib/data_manager');\n\nmodule.exports = {\n  initialize: function() {\n    var Router;\n    window.app = this;\n    window.collections = {};\n    window.views = {};\n    window.rbiActiveData = {};\n    window.rbiActiveData.userConfiguration = new UserConfiguration({});\n    window.rbiActiveData.olderOperationDate = moment(new Date());\n    window.rbiActiveData.budgetByAccount = {};\n    window.rbiActiveData.accountNumber = null;\n    window.rbiActiveData.bankAccount = null;\n    window.rbiActiveData.currentOperations = null;\n    window.rbiActiveData.allOperationsById = null;\n    window.rbiDataManager = new DataManager();\n    window.rbiColors = {\n      border_color: \"#efefef\",\n      grid_color: \"#ddd\",\n      default_black: \"#666\",\n      green: \"#8ecf67\",\n      yellow: \"#fac567\",\n      orange: \"#F08C56\",\n      blue: \"#87ceeb\",\n      red: \"#f74e4d\",\n      teal: \"#28D8CA\",\n      grey: \"#999999\"\n    };\n    window.rbiIcons = {\n      plus: {\n        encoded: \"&#57602;\",\n        decoded: \"\"\n      },\n      minus: {\n        encoded: \"&#57601;\",\n        decoded: \"\"\n      },\n      positiveEvolution: {\n        encoded: \"&#57641;\",\n        decoded: \"\"\n      },\n      negativeEvolution: {\n        encoded: \"&#57643;\",\n        decoded: \"\"\n      },\n      search: {\n        encoded: \"&#57471;\",\n        decoded: \"\"\n      },\n      variableCost: {\n        encoded: \"&#57393;\",\n        decoded: \"\"\n      },\n      config: {\n        encoded: \"&#57486;\",\n        decoded: \"\"\n      },\n      deleteItem: {\n        encoded: \"&#57512;\",\n        decoded: \"\"\n      }\n    };\n    window.collections.banks = new BanksCollection();\n    window.collections.operations = new BankOperationsCollection();\n    window.collections.amounts = new BankAmountsCollection();\n    window.collections.regularOperations = new RegularOperationsCollection();\n\n    /*\n            views\n     */\n    window.views.appView = new AppView();\n    window.views.appView.render();\n    window.activeObjects = {};\n    _.extend(window.activeObjects, Backbone.Events);\n    Router = require('router');\n    this.router = new Router();\n    if (typeof Object.freeze === 'function') {\n      return Object.freeze(this);\n    }\n  }\n};\n","var BankAccount, BankAccounts,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBankAccount = require('../models/bank_account');\n\nmodule.exports = BankAccounts = (function(_super) {\n  __extends(BankAccounts, _super);\n\n  BankAccounts.prototype.model = BankAccount;\n\n  BankAccounts.prototype.url = \"bankaccounts\";\n\n  function BankAccounts(bank) {\n    this.bank = bank;\n    this.url = \"banks/getAccounts/\" + this.bank.get(\"id\");\n    BankAccounts.__super__.constructor.call(this);\n  }\n\n  BankAccounts.prototype.getSum = function() {\n    var account, sum, _i, _len, _ref;\n    sum = 0;\n    _ref = this.models;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      account = _ref[_i];\n      sum += Number(account.get(\"amount\"));\n    }\n    return sum;\n  };\n\n  return BankAccounts;\n\n})(Backbone.Collection);\n","var BankAlert, BankAlerts,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBankAlert = require('../models/bank_alert');\n\nmodule.exports = BankAlerts = (function(_super) {\n  __extends(BankAlerts, _super);\n\n  function BankAlerts() {\n    return BankAlerts.__super__.constructor.apply(this, arguments);\n  }\n\n  BankAlerts.prototype.model = BankAlert;\n\n  BankAlerts.prototype.url = \"bankalerts\";\n\n  return BankAlerts;\n\n})(Backbone.Collection);\n","var BankAmount, BankAmounts,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBankAmount = require('../models/bank_amount');\n\nmodule.exports = BankAmounts = (function(_super) {\n  __extends(BankAmounts, _super);\n\n  function BankAmounts() {\n    return BankAmounts.__super__.constructor.apply(this, arguments);\n  }\n\n  BankAmounts.prototype.model = BankAmount;\n\n  BankAmounts.prototype.url = \"bankaccounts\";\n\n  BankAmounts.prototype.setAccount = function(account) {\n    this.account = account;\n    return this.url = \"bankaccounts/getLastYearAmounts/\" + this.account.get(\"id\");\n  };\n\n  return BankAmounts;\n\n})(Backbone.Collection);\n","var BankOperation, BankOperations,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBankOperation = require('../models/bank_operation');\n\nmodule.exports = BankOperations = (function(_super) {\n  __extends(BankOperations, _super);\n\n  function BankOperations() {\n    return BankOperations.__super__.constructor.apply(this, arguments);\n  }\n\n  BankOperations.prototype.model = BankOperation;\n\n  BankOperations.prototype.url = \"bankoperations\";\n\n  BankOperations.prototype.order = \"asc\";\n\n  BankOperations.prototype.orderBy = \"date\";\n\n  BankOperations.prototype.setAccount = function(account) {\n    this.account = account;\n    return this.url = \"bankaccounts/getOperations/\" + this.account.get(\"id\");\n  };\n\n  BankOperations.prototype.setComparator = function(type) {\n    if (type === \"date\") {\n      return this.comparator = (function(_this) {\n        return function(o1, o2) {\n          var d1, d2, sort, t1, t2;\n          d1 = new Date(o1.get(\"date\")).getTime();\n          d2 = new Date(o2.get(\"date\")).getTime();\n          t1 = o1.get(\"title\");\n          t2 = o2.get(\"title\");\n          sort = _this.order === \"asc\" ? -1 : 1;\n          if (d1 === d2) {\n            if (t1 > t2) {\n              return sort;\n            }\n            if (t1 < t2) {\n              return -sort;\n            }\n            return 0;\n          } else if (d1 > d2) {\n            return sort;\n          } else {\n            return -sort;\n          }\n        };\n      })(this);\n    } else {\n      this.orderBy = type;\n      return this.comparator = function(o1, o2) {\n        var sort, t1, t2;\n        t1 = o1.get(this.orderBy);\n        t2 = o2.get(this.orderBy);\n        sort = this.order === \"asc\" ? -1 : 1;\n        if (t1 === t2) {\n          return 0;\n        } else if (t1 > t2) {\n          return sort;\n        } else {\n          return -sort;\n        }\n      };\n    }\n  };\n\n  BankOperations.prototype.toggleSort = function(order) {\n    if (this.orderBy === order) {\n      return this.order = this.order === \"asc\" ? \"desc\" : \"asc\";\n    } else {\n      return this.orderBy = order;\n    }\n  };\n\n  return BankOperations;\n\n})(Backbone.Collection);\n","var Bank, Banks,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBank = require('../models/bank');\n\nmodule.exports = Banks = (function(_super) {\n  __extends(Banks, _super);\n\n  function Banks() {\n    return Banks.__super__.constructor.apply(this, arguments);\n  }\n\n  Banks.prototype.model = Bank;\n\n  Banks.prototype.url = \"banks\";\n\n  Banks.prototype.getSum = function() {\n    var bank, sum, _i, _len, _ref;\n    sum = 0;\n    _ref = this.models;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      bank = _ref[_i];\n      sum += Number(bank.get(\"amount\"));\n    }\n    return sum;\n  };\n\n  return Banks;\n\n})(Backbone.Collection);\n","var RegularOperation, RegularOperations,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nRegularOperation = require('../models/regular_operation');\n\nmodule.exports = RegularOperations = (function(_super) {\n  __extends(RegularOperations, _super);\n\n  function RegularOperations() {\n    return RegularOperations.__super__.constructor.apply(this, arguments);\n  }\n\n  RegularOperations.prototype.model = RegularOperation;\n\n  RegularOperations.prototype.url = \"rbifixedcost\";\n\n  RegularOperations.prototype.setAccount = function(accountNumber) {\n    this.accountNumber = accountNumber;\n    return this.url = \"rbifixedcost/getRegularOperationsByAccountNumber/\" + this.accountNumber;\n  };\n\n  return RegularOperations;\n\n})(Backbone.Collection);\n","var app;\n\napp = require('application');\n\n$(function() {\n  require('lib/app_helpers');\n  return app.initialize();\n});\n","(function() {\n  return (function() {\n    var console, dummy, method, methods, _results;\n    console = window.console = window.console || {};\n    method = void 0;\n    dummy = function() {};\n    methods = 'assert,count,debug,dir,dirxml,error,exception, group,groupCollapsed,groupEnd,info,log,markTimeline, profile,profileEnd,time,timeEnd,trace,warn'.split(',');\n    _results = [];\n    while (method = methods.pop()) {\n      _results.push(console[method] = console[method] || dummy);\n    }\n    return _results;\n  })();\n})();\n\nNumber.prototype.formatMoney = function(decPlaces, thouSeparator, decSeparator, currency, solid) {\n  var finalN, i, j, n, sign;\n  n = this;\n  decPlaces = (isNaN(decPlaces = Math.abs(decPlaces)) ? 2 : decPlaces);\n  decSeparator = (decSeparator === undefined ? \".\" : decSeparator);\n  thouSeparator = (thouSeparator === undefined ? \",\" : thouSeparator);\n  sign = (n < 0 ? \"-\" : \"\");\n  i = parseInt(n = Math.abs(+n || 0).toFixed(decPlaces)) + \"\";\n  j = ((j = i.length) > 3 ? j % 3 : 0);\n  finalN = sign + (j ? i.substr(0, j) + thouSeparator : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thouSeparator) + (decPlaces ? decSeparator + Math.abs(n - i).toFixed(decPlaces).slice(2) : \"\");\n  if (currency != null) {\n    finalN += currency;\n  }\n  if (solid != null) {\n    finalN = finalN.replace(' ', '&nbsp;');\n  }\n  return finalN;\n};\n\nNumber.prototype.money = function() {\n  return this.formatMoney(2, \" \", \",\", \"&euro;\", true);\n};\n\nDate.prototype.dateString = function() {\n  var addZeros, myDate;\n  addZeros = function(num) {\n    if (Number(num) < 10) {\n      return \"0\" + num;\n    } else {\n      return num;\n    }\n  };\n  myDate = this;\n  return addZeros(myDate.getDate() + 1) + \"/\" + addZeros(myDate.getMonth() + 1) + \"/\" + myDate.getFullYear();\n};\n\nDate.prototype.timeString = function() {\n  var addZeros, myDate;\n  addZeros = function(num) {\n    if (Number(num) < 10) {\n      return \"0\" + num;\n    } else {\n      return num;\n    }\n  };\n  myDate = this;\n  return addZeros(myDate.getHours()) + \":\" + addZeros(myDate.getMinutes());\n};\n","var BaseView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = BaseView = (function(_super) {\n  __extends(BaseView, _super);\n\n  function BaseView() {\n    return BaseView.__super__.constructor.apply(this, arguments);\n  }\n\n  BaseView.prototype.template = function() {};\n\n  BaseView.prototype.initialize = function() {};\n\n  BaseView.prototype.getRenderData = function() {\n    return {\n      model: this.model\n    };\n  };\n\n  BaseView.prototype.render = function() {\n    this.beforeRender();\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  };\n\n  BaseView.prototype.beforeRender = function() {};\n\n  BaseView.prototype.afterRender = function() {};\n\n  BaseView.prototype.destroy = function() {\n    this.undelegateEvents();\n    this.$el.removeData().unbind();\n    this.remove();\n    return Backbone.View.prototype.remove.call(this);\n  };\n\n  return BaseView;\n\n})(Backbone.View);\n","var DataManager;\n\nmodule.exports = DataManager = (function() {\n  function DataManager() {}\n\n  DataManager.prototype.loadLastYearAmounts = function(account, callback) {\n    var that;\n    that = this;\n    window.collections.amounts.reset();\n    window.collections.amounts.setAccount(account);\n    return window.collections.amounts.fetch({\n      success: function(amounts) {\n        that.setupLastYearAmountsFlot(amounts, account);\n        $(window).resize(function() {\n          return that.setupLastYearAmountsFlot(amounts, account);\n        });\n        if (callback != null) {\n          return callback();\n        }\n      },\n      error: function() {\n        return console.log(\"Error during amounts of last year fetching process\");\n      }\n    });\n  };\n\n  DataManager.prototype.setupLastYearAmountsFlot = function(amounts, account) {\n    var currentDate, dayCounter2, dayRatio, daysPerMonth, flotReadyAmounts, formattedAmounts, lastAmount, maxAmount, minAmount, numberOfDays, plot, sixMonthAgo, that, threeMonthAgo;\n    that = this;\n    formattedAmounts = [];\n    flotReadyAmounts = [];\n    daysPerMonth = {\n      twelve: 365,\n      six: 365 / 2,\n      three: 365 / 4\n    };\n    numberOfDays = daysPerMonth.three;\n    threeMonthAgo = new Date();\n    threeMonthAgo = threeMonthAgo.setMonth(threeMonthAgo.getMonth() - 3);\n    sixMonthAgo = new Date();\n    sixMonthAgo = sixMonthAgo.setMonth(sixMonthAgo.getMonth() - 6);\n    dayRatio = 4;\n    amounts.each(function(amount) {\n      var amountDate, currentDate1, dayCounter1;\n      if (window.rbiActiveData.olderOperationDate > moment(amount.get('date'))) {\n        window.rbiActiveData.olderOperationDate = moment(amount.get('date'));\n      }\n      currentDate1 = new Date();\n      currentDate1.setHours(12, 0, 0, 0);\n      amountDate = new Date(amount.get('date'));\n      amountDate.setHours(12, 0, 0, 0);\n      dayCounter1 = 0;\n      while ((amountDate.getTime() !== currentDate1.getTime()) && (dayCounter1 < 365)) {\n        currentDate1.setDate(currentDate1.getDate() - 1);\n        dayCounter1++;\n      }\n      if (dayCounter1 < 364) {\n        formattedAmounts[currentDate1.getTime()] = amount.get('amount');\n      }\n      if (currentDate1.getTime() < threeMonthAgo) {\n        return numberOfDays = daysPerMonth.six;\n      } else if (currentDate1.getTime() < sixMonthAgo) {\n        return numberOfDays = daysPerMonth.twelve;\n      }\n    });\n    currentDate = new Date();\n    currentDate.setHours(12, 0, 0, 0);\n    minAmount = minAmount = maxAmount = parseFloat(account.get('amount'));\n    dayCounter2 = 0;\n    while (dayCounter2 < numberOfDays) {\n      if (formattedAmounts[currentDate.getTime()]) {\n        lastAmount = parseFloat(formattedAmounts[currentDate.getTime()]);\n      }\n      flotReadyAmounts.push([currentDate.getTime(), lastAmount]);\n      currentDate.setDate(currentDate.getDate() - 1);\n      if (lastAmount < minAmount) {\n        minAmount = lastAmount;\n      }\n      if (lastAmount > maxAmount) {\n        maxAmount = lastAmount;\n      }\n      dayCounter2++;\n    }\n    $(\"#max-amount\").html(maxAmount.money());\n    $(\"#min-amount\").html(minAmount.money());\n    minAmount = minAmount - 500;\n    maxAmount = maxAmount + 500;\n    flotReadyAmounts.reverse();\n    $('#amount-stats').empty();\n    return plot = $.plot(\"#amount-stats\", [\n      {\n        data: flotReadyAmounts\n      }\n    ], {\n      series: {\n        lines: {\n          show: true,\n          lineWidth: 2\n        },\n        points: {\n          show: false\n        }\n      },\n      grid: {\n        hoverable: true,\n        clickable: true,\n        borderWidth: 1,\n        tickColor: $border_color,\n        borderColor: '#eeeeee'\n      },\n      colors: [window.rbiColors.blue],\n      shadowSize: 0,\n      yaxis: {\n        min: minAmount,\n        max: maxAmount\n      },\n      xaxis: {\n        mode: \"time\",\n        minTickSize: [1, \"month\"],\n        monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre']\n      },\n      tooltip: true,\n      tooltipOpts: {\n        content: '%y.2&euro;<br /> %x',\n        xDateFormat: '%d/%m/%y'\n      }\n    });\n  };\n\n  return DataManager;\n\n})();\n","var BaseView, ViewCollection,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('lib/base_view');\n\nmodule.exports = ViewCollection = (function(_super) {\n  __extends(ViewCollection, _super);\n\n  function ViewCollection() {\n    this.removeItem = __bind(this.removeItem, this);\n    this.addItem = __bind(this.addItem, this);\n    return ViewCollection.__super__.constructor.apply(this, arguments);\n  }\n\n  ViewCollection.prototype.itemview = null;\n\n  ViewCollection.prototype.views = {};\n\n  ViewCollection.prototype.template = function() {\n    return '';\n  };\n\n  ViewCollection.prototype.itemViewOptions = function() {};\n\n  ViewCollection.prototype.collectionEl = null;\n\n  ViewCollection.prototype.onChange = function() {\n    return this.$el.toggleClass('empty', _.size(this.views) === 0);\n  };\n\n  ViewCollection.prototype.appendView = function(view) {\n    return this.$collectionEl.append(view.el);\n  };\n\n  ViewCollection.prototype.initialize = function() {\n    var collectionEl;\n    ViewCollection.__super__.initialize.apply(this, arguments);\n    this.views = {};\n    this.listenTo(this.collection, \"reset\", this.onReset);\n    this.listenTo(this.collection, \"add\", this.addItem);\n    this.listenTo(this.collection, \"remove\", this.removeItem);\n    if (this.collectionEl == null) {\n      return collectionEl = el;\n    }\n  };\n\n  ViewCollection.prototype.render = function() {\n    var id, view, _ref;\n    _ref = this.views;\n    for (id in _ref) {\n      view = _ref[id];\n      view.$el.detach();\n    }\n    return ViewCollection.__super__.render.apply(this, arguments);\n  };\n\n  ViewCollection.prototype.afterRender = function() {\n    var id, view, _ref;\n    this.$collectionEl = $(this.collectionEl);\n    _ref = this.views;\n    for (id in _ref) {\n      view = _ref[id];\n      this.appendView(view.$el);\n    }\n    this.onReset(this.collection);\n    return this.onChange(this.views);\n  };\n\n  ViewCollection.prototype.remove = function() {\n    this.onReset([]);\n    return ViewCollection.__super__.remove.apply(this, arguments);\n  };\n\n  ViewCollection.prototype.onReset = function(newcollection) {\n    var id, view, _ref;\n    _ref = this.views;\n    for (id in _ref) {\n      view = _ref[id];\n      view.remove();\n    }\n    return newcollection.forEach(this.addItem);\n  };\n\n  ViewCollection.prototype.addItem = function(model) {\n    var options, view;\n    options = _.extend({}, {\n      model: model\n    }, this.itemViewOptions(model));\n    view = new this.itemview(options);\n    this.views[model.cid] = view.render();\n    this.appendView(view);\n    return this.onChange(this.views);\n  };\n\n  ViewCollection.prototype.removeItem = function(model) {\n    this.views[model.cid].remove();\n    delete this.views[model.cid];\n    return this.onChange(this.views);\n  };\n\n  return ViewCollection;\n\n})(BaseView);\n","var Bank, BankAccountsCollection,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBankAccountsCollection = require('../collections/bank_accounts');\n\nmodule.exports = Bank = (function(_super) {\n  __extends(Bank, _super);\n\n  function Bank() {\n    return Bank.__super__.constructor.apply(this, arguments);\n  }\n\n  Bank.prototype.defaults = {\n    amount: 0\n  };\n\n  Bank.prototype.checked = true;\n\n  Bank.prototype.initialize = function() {\n    this.accounts = new BankAccountsCollection(this);\n    this.listenTo(this.accounts, \"add\", this.updateAmount);\n    this.listenTo(this.accounts, \"remove\", this.updateAmount);\n    this.listenTo(this.accounts, \"destroy\", this.updateAmount);\n    return this.listenTo(this.accounts, \"change\", this.updateAmount);\n  };\n\n  Bank.prototype.updateAmount = function() {\n    return this.set(\"amount\", this.accounts.getSum());\n  };\n\n  return Bank;\n\n})(Backbone.Model);\n","var BankAccount, BankOperationsCollection,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBankOperationsCollection = require('../collections/bank_operations');\n\nmodule.exports = BankAccount = (function(_super) {\n  __extends(BankAccount, _super);\n\n  function BankAccount() {\n    return BankAccount.__super__.constructor.apply(this, arguments);\n  }\n\n  BankAccount.prototype.checked = true;\n\n  return BankAccount;\n\n})(Backbone.Model);\n","var BankAlert,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = BankAlert = (function(_super) {\n  __extends(BankAlert, _super);\n\n  function BankAlert() {\n    return BankAlert.__super__.constructor.apply(this, arguments);\n  }\n\n  BankAlert.prototype.url = \"bankalerts\";\n\n  return BankAlert;\n\n})(Backbone.Model);\n","var BankAmount,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = BankAmount = (function(_super) {\n  __extends(BankAmount, _super);\n\n  function BankAmount() {\n    return BankAmount.__super__.constructor.apply(this, arguments);\n  }\n\n  return BankAmount;\n\n})(Backbone.Model);\n","var BankOperation,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = BankOperation = (function(_super) {\n  __extends(BankOperation, _super);\n\n  function BankOperation() {\n    return BankOperation.__super__.constructor.apply(this, arguments);\n  }\n\n  return BankOperation;\n\n})(Backbone.Model);\n","var RegularOperation,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = RegularOperation = (function(_super) {\n  __extends(RegularOperation, _super);\n\n  function RegularOperation() {\n    return RegularOperation.__super__.constructor.apply(this, arguments);\n  }\n\n  return RegularOperation;\n\n})(Backbone.Model);\n","var Config,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = Config = (function(_super) {\n  __extends(Config, _super);\n\n  function Config() {\n    return Config.__super__.constructor.apply(this, arguments);\n  }\n\n  Config.prototype.url = 'rbiconfiguration';\n\n  Config.prototype.isNew = function() {\n    return true;\n  };\n\n  Config.prototype.defaults = {\n    accountNumber: '',\n    depositList: [],\n    budgetByAcount: {}\n  };\n\n  return Config;\n\n})(Backbone.Model);\n","var AppView, Router,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nAppView = require('views/app');\n\nmodule.exports = Router = (function(_super) {\n  __extends(Router, _super);\n\n  function Router() {\n    return Router.__super__.constructor.apply(this, arguments);\n  }\n\n  Router.prototype.routes = {\n    '': 'monthly_analysis',\n    'analyse-mensuelle': 'monthly_analysis',\n    'budget-previsionnel': 'forecast_budget',\n    'analyse-mensuelle-comparee': 'compared_analysis',\n    'achats-en-ligne': 'online_shopping',\n    'alertes': 'alerts',\n    'parametres': 'configuration'\n  };\n\n  Router.prototype.monthly_analysis = function() {\n    var _ref;\n    return (_ref = window.views.monthlyAnalysisView) != null ? _ref.render() : void 0;\n  };\n\n  Router.prototype.forecast_budget = function() {\n    var _ref;\n    return (_ref = window.views.forecastBudgetView) != null ? _ref.render() : void 0;\n  };\n\n  Router.prototype.compared_analysis = function() {\n    var _ref;\n    return (_ref = window.views.comparedAnalysisView) != null ? _ref.render() : void 0;\n  };\n\n  Router.prototype.online_shopping = function() {\n    var _ref;\n    return (_ref = window.views.onlineShoppingView) != null ? _ref.render() : void 0;\n  };\n\n  Router.prototype.alerts = function() {\n    var _ref;\n    return (_ref = window.views.alertsView) != null ? _ref.render() : void 0;\n  };\n\n  Router.prototype.configuration = function() {\n    var _ref;\n    return (_ref = window.views.configurationView) != null ? _ref.render() : void 0;\n  };\n\n  return Router;\n\n})(Backbone.Router);\n","var AlertsView, BaseView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nmodule.exports = AlertsView = (function(_super) {\n  __extends(AlertsView, _super);\n\n  function AlertsView() {\n    return AlertsView.__super__.constructor.apply(this, arguments);\n  }\n\n  AlertsView.prototype.template = require('./templates/alerts');\n\n  AlertsView.prototype.el = 'div#interface-box';\n\n  AlertsView.prototype.subViews = [];\n\n  AlertsView.prototype.initialize = function() {};\n\n  AlertsView.prototype.render = function() {\n    var view;\n    AlertsView.__super__.render.call(this);\n    view = this;\n    return this;\n  };\n\n  return AlertsView;\n\n})(BaseView);\n","var AlertsView, AppView, BaseView, ComparedAnalysisView, ConfigurationView, ForecastBudgetView, MenuView, MonthlyAnalysisView, OnlineShoppingView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nConfigurationView = require('views/configuration');\n\nMonthlyAnalysisView = require('views/monthly_analysis');\n\nForecastBudgetView = require('views/forecast_budget');\n\nComparedAnalysisView = require('views/compared_analysis');\n\nOnlineShoppingView = require('views/online_shopping');\n\nAlertsView = require('views/alerts');\n\nMenuView = require('views/menu');\n\nmodule.exports = AppView = (function(_super) {\n  __extends(AppView, _super);\n\n  function AppView() {\n    return AppView.__super__.constructor.apply(this, arguments);\n  }\n\n  AppView.prototype.template = require('./templates/app');\n\n  AppView.prototype.el = 'body.application';\n\n  AppView.prototype.isLoading = true;\n\n  AppView.prototype.afterRender = function() {\n    window.collections.banks.fetch({\n      data: {\n        withAccountOnly: true\n      },\n      success: (function(_this) {\n        return function() {\n          if (!_this.menuView) {\n            _this.menuView = new MenuView();\n          }\n          if (!window.views.configurationView) {\n            window.views.configurationView = new ConfigurationView();\n          }\n          if (!window.views.monthlyAnalysisView) {\n            window.views.monthlyAnalysisView = new MonthlyAnalysisView();\n          }\n          if (!window.views.forecastBudgetView) {\n            window.views.forecastBudgetView = new ForecastBudgetView();\n          }\n          if (!window.views.comparedAnalysisView) {\n            window.views.comparedAnalysisView = new ComparedAnalysisView();\n          }\n          if (!window.views.onlineShoppingView) {\n            window.views.onlineShoppingView = new OnlineShoppingView();\n          }\n          if (!window.views.alertsView) {\n            window.views.alertsView = new AlertsView();\n          }\n          _this.menuView.render();\n          Backbone.history.start();\n          _this.displayLoadingView();\n          if (document.location.hash !== \"#\" + \"parametres\") {\n            return window.app.router.navigate('parametres', {\n              trigger: true\n            });\n          }\n        };\n      })(this),\n      error: function() {\n        return console.log(\"Fatal error: could not get the banks list\");\n      }\n    });\n    return $('#account-budget-icon').click(function() {\n      return $('#account-budget-amount').focus();\n    });\n  };\n\n  AppView.prototype.displayLoadingView = function() {\n    var loaderHtml;\n    this.isLoading = true;\n    $('#two-cols-box').hide();\n    $('#fullsize-box').show();\n    loaderHtml = '<div class=\"config-loader\">' + \"\\t\" + 'Chargement de vos paramètres...<br /><br />' + \"\\t\" + '<img src=\"./loader_big_blue.gif\" />' + '</div>';\n    return $('#fullsize-box').append(loaderHtml);\n  };\n\n  AppView.prototype.displayInterfaceView = function() {\n    $('#fullsize-box').empty().hide();\n    $('#two-cols-box').show();\n    return this.isLoading = false;\n  };\n\n  return AppView;\n\n})(BaseView);\n","var BalanceOperationView, BankStatementView, BaseView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nBalanceOperationView = require(\"./bank_statement_entry\");\n\nmodule.exports = BankStatementView = (function(_super) {\n  var params, subViewLastDate;\n\n  __extends(BankStatementView, _super);\n\n  BankStatementView.prototype.templateHeader = require('./templates/bank_statement_header');\n\n  BankStatementView.prototype.events = {\n    'click a.recheck-button': \"checkAccount\",\n    'click th.sort-date': \"sortByDate\",\n    'click th.sort-title': \"sortByTitle\",\n    'click th.sort-amount': \"sortByAmount\",\n    'keyup input#search-text': \"reload\"\n  };\n\n  BankStatementView.prototype.inUse = false;\n\n  BankStatementView.prototype.subViews = [];\n\n  subViewLastDate = '';\n\n  params = null;\n\n  function BankStatementView(el) {\n    this.el = el;\n    BankStatementView.__super__.constructor.call(this);\n  }\n\n  BankStatementView.prototype.initialize = function() {\n    return this.listenTo(window.activeObjects, 'changeActiveAccount', this.reload);\n  };\n\n  BankStatementView.prototype.render = function() {\n    this.$el.html(require(\"./templates/bank_statement_empty\"));\n    return this;\n  };\n\n  BankStatementView.prototype.reload = function(params, callback) {\n    var displayFixedCosts, displayVariableCosts, view;\n    view = this;\n    this.model = window.rbiActiveData.bankAccount;\n    if ((params != null) && (params.dateFrom != null)) {\n      this.params = params;\n    }\n    if (this.model != null) {\n      this.updateFilters();\n      if (this.$(\"#table-operations\").length === 0) {\n        this.$el.html(this.templateHeader({\n          model: this.model\n        }));\n      }\n    }\n    displayFixedCosts = this.data != null ? this.data.fixedCosts || false : false;\n    displayVariableCosts = this.data != null ? this.data.variableCosts || false : false;\n    if (this.send) {\n      return $.ajax({\n        type: \"POST\",\n        url: \"bankoperations/byDate\",\n        data: this.data,\n        success: function(operations) {\n          if (operations) {\n            return $.ajax({\n              type: \"GET\",\n              url: \"rbifixedcost\",\n              success: (function(_this) {\n                return function(fixedCosts) {\n                  var finalOperations, fixedCost, index, operation, operationRemoved, _i, _j, _len, _len1;\n                  window.rbiActiveData.currentOperations = {};\n                  finalOperations = [];\n                  for (index = _i = 0, _len = operations.length; _i < _len; index = ++_i) {\n                    operation = operations[index];\n                    operation.isFixedCost = false;\n                    if (operation.amount < 0) {\n                      for (_j = 0, _len1 = fixedCosts.length; _j < _len1; _j++) {\n                        fixedCost = fixedCosts[_j];\n                        if ($.inArray(operation.id, fixedCost.idTable) >= 0) {\n                          operation.isFixedCost = true;\n                          operation.fixedCostId = fixedCost.id;\n                          break;\n                        }\n                      }\n                    }\n                    operationRemoved = false;\n                    if (displayFixedCosts && (!operation.isFixedCost)) {\n                      operationRemoved = true;\n                    } else if (displayVariableCosts && (operation.isFixedCost || (operation.amount > 0))) {\n                      operationRemoved = true;\n                    }\n                    if (!operationRemoved) {\n                      finalOperations.push(operation);\n                      window.rbiActiveData.currentOperations[operation.id] = operation;\n                    }\n                  }\n                  if (callback != null) {\n                    callback(window.rbiActiveData.currentOperations);\n                  }\n                  window.collections.operations.reset(finalOperations);\n                  return view.addAll();\n                };\n              })(this),\n              error: function(err) {\n                return console.log(\"getting fixed cost failed.\");\n              }\n            });\n          } else {\n            return window.collections.operations.reset();\n          }\n        },\n        error: function(err) {\n          console.log(\"there was an error\");\n          if (callback != null) {\n            return callback(null);\n          }\n        }\n      });\n    }\n  };\n\n  BankStatementView.prototype.updateFilters = function() {\n    var accountNumber, dateFrom, dateFromVal, dateTo, dateToVal, searchTextVal;\n    if (this.params != null) {\n      dateFrom = this.params.dateFrom ? moment(this.params.dateFrom).format('YYYY-MM-DD') : null;\n      dateTo = this.params.dateTo ? moment(this.params.dateTo).format('YYYY-MM-DD') : null;\n    }\n    if (!(dateFrom || dateTo)) {\n      this.send = false;\n      window.collections.operations.reset();\n      return;\n    } else {\n      this.send = true;\n    }\n    if (window.rbiActiveData.bankAccount != null) {\n      accountNumber = window.rbiActiveData.bankAccount.get('accountNumber');\n    } else {\n      this.send = false;\n    }\n    dateFromVal = new Date(dateFrom || null);\n    dateToVal = new Date(dateTo || new Date());\n    this.data = {\n      dateFrom: dateFromVal,\n      dateTo: dateToVal,\n      accounts: [accountNumber]\n    };\n    searchTextVal = $(\"input#search-text\").val();\n    if ((searchTextVal != null) && (searchTextVal !== \"\")) {\n      if (searchTextVal === \"#credits\") {\n        return this.data.credits = true;\n      } else if (searchTextVal === \"#debits\") {\n        return this.data.debits = true;\n      } else if (searchTextVal === \"#frais-fixes\") {\n        return this.data.fixedCosts = true;\n      } else if (searchTextVal === \"#depenses\") {\n        return this.data.variableCosts = true;\n      } else {\n        return this.data.searchText = searchTextVal;\n      }\n    }\n  };\n\n  BankStatementView.prototype.addAll = function() {\n    var index, operation, subView, subViewDate, view, _i, _j, _len, _len1, _ref, _ref1, _results;\n    this.$(\"#table-operations\").html(\"\");\n    this.$(\".loading\").remove();\n    _ref = this.subViews;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      view = _ref[_i];\n      view.destroy();\n    }\n    this.subViews = [];\n    if (window.collections.operations.models.length === 0) {\n      $(\"#table-operations\").append($('<tr><td>Aucune opération ne correspond à ces critères.</td></tr>'));\n      return;\n    }\n    _ref1 = window.collections.operations.models;\n    _results = [];\n    for (index = _j = 0, _len1 = _ref1.length; _j < _len1; index = ++_j) {\n      operation = _ref1[index];\n      subView = new BalanceOperationView(operation, this.model);\n      subViewDate = subView.render().model.get('date');\n      if ((this.subViewLastDate !== subViewDate) || (index === 0)) {\n        this.subViewLastDate = subViewDate;\n        this.$(\"#table-operations\").append($('<tr class=\"special\"><td colspan=\"4\">' + moment(this.subViewLastDate).format(\"DD/MM/YYYY\" + '</td></tr>')));\n      }\n      _results.push(this.$(\"#table-operations\").append(subView.render().el));\n    }\n    return _results;\n  };\n\n  BankStatementView.prototype.destroy = function() {\n    var view, _i, _len, _ref, _ref1;\n    if ((_ref = this.viewTitle) != null) {\n      _ref.destroy();\n    }\n    _ref1 = this.subViews;\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      view = _ref1[_i];\n      view.destroy();\n    }\n    return BankStatementView.__super__.destroy.call(this);\n  };\n\n  return BankStatementView;\n\n})(BaseView);\n","var BaseView, EntryView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nmodule.exports = EntryView = (function(_super) {\n  __extends(EntryView, _super);\n\n  EntryView.prototype.template = require('./templates/bank_statement_entry');\n\n  EntryView.prototype.tagName = 'tr';\n\n  EntryView.prototype.events = {\n    'mouseenter .popup-container > .variable-cost': 'switchFixedCostIcon',\n    'mouseleave .popup-container > .variable-cost': 'switchFixedCostIcon',\n    'mouseenter .popup-container > .fixed-cost': 'switchFixedCostIcon',\n    'mouseleave .popup-container > .fixed-cost': 'switchFixedCostIcon',\n    'click .popup-container > .variable-cost': 'popupFixedCost',\n    'click .popup-container > .fixed-cost': 'popupFixedCost',\n    'click #cancel-fixed-cost': 'destroyPopupFixedCost',\n    'click #save-fixed-cost': 'prepareFixedCost',\n    'click #remove-fixed-cost': 'removeFixedCost'\n  };\n\n  function EntryView(model, account, showAccountNum) {\n    this.model = model;\n    this.account = account;\n    this.showAccountNum = showAccountNum != null ? showAccountNum : false;\n    EntryView.__super__.constructor.call(this);\n  }\n\n  EntryView.prototype.render = function() {\n    var hint;\n    if (this.model.get(\"amount\") > 0) {\n      this.$el.addClass(\"success\");\n    }\n    this.model.account = this.account;\n    this.model.formattedDate = moment(this.model.get('date')).format(\"DD/MM/YYYY\");\n    if ((this.model.get('amount')) > 0) {\n      this.model.costClass = 'not-displayed-cost';\n    } else {\n      this.model.costClass = \"variable-cost\";\n      this.model.costIcon = \"&#57482;\";\n      if (this.model.get('isFixedCost')) {\n        this.model.costClass = \"fixed-cost\";\n        this.model.costIcon = \"&#57481;\";\n      }\n    }\n    if (this.showAccountNum) {\n      hint = (\"\" + (this.model.account.get('title')) + \", \") + (\"n°\" + (this.model.account.get('accountNumber')));\n      this.model.hint = (\"\" + (this.model.account.get('title')) + \", \") + (\"n°\" + (this.model.account.get('accountNumber')));\n    } else {\n      this.model.hint = \"\" + (this.model.get('raw'));\n    }\n    console.log(this.model);\n    EntryView.__super__.render.call(this);\n    return this;\n  };\n\n  EntryView.prototype.destroyPopupFixedCost = function(event) {\n    var jqCaller, jqFixedCostIcon, jqParent, jqPopup;\n    jqCaller = $(event.currentTarget);\n    jqPopup = jqCaller.parent();\n    jqParent = jqPopup.parent();\n    jqFixedCostIcon = jqPopup.children('.iconCostType');\n    jqFixedCostIcon.appendTo(jqParent);\n    jqPopup.remove();\n    if (jqCaller.attr('id') === 'cancel-fixed-cost') {\n      return jqFixedCostIcon.mouseleave();\n    } else {\n      if (jqFixedCostIcon.hasClass('variable-cost')) {\n        return jqFixedCostIcon.removeClass('variable-cost').addClass('fixed-cost');\n      } else {\n        return jqFixedCostIcon.removeClass('fixed-cost').addClass('variable-cost');\n      }\n    }\n  };\n\n  EntryView.prototype.removeFixedCost = function(event) {\n    var fixedCostId;\n    fixedCostId = this.model.get(\"fixedCostId\" || null);\n    if (fixedCostId != null) {\n      return $.ajax({\n        url: '/rbifixedcost/' + fixedCostId,\n        type: 'DELETE',\n        success: (function(_this) {\n          return function(result) {\n            var id, operation, _ref;\n            console.log(\"Delete fixed cost success.\");\n            _this.destroyPopupFixedCost(event);\n            $('#search-text').keyup();\n            if (window.rbiActiveData.currentOperations != null) {\n              _ref = window.rbiActiveData.currentOperations;\n              for (id in _ref) {\n                operation = _ref[id];\n                if ((operation.fixedCostId != null) && (operation.fixedCostId = fixedCostId)) {\n                  operation.isFixedCost = false;\n                  operation.fixedCostId = null;\n                }\n              }\n              return window.views.monthlyAnalysisView.displayMonthlySums(window.rbiActiveData.currentOperations);\n            }\n          };\n        })(this),\n        error: function() {\n          return console.log(\"Delete fixed cost failed.\");\n        }\n      });\n    }\n  };\n\n  EntryView.prototype.prepareFixedCost = function(event) {\n    var accountNumber, currentUniquery, fixedCostToRegister, jqPopup, neededRequest, userChoice;\n    jqPopup = $(event.currentTarget).parent();\n    userChoice = jqPopup.children('input[type=radio]:checked').val();\n    accountNumber = window.rbiActiveData.bankAccount.get('accountNumber');\n    neededRequest = false;\n    fixedCostToRegister = {\n      type: userChoice,\n      accountNumber: accountNumber,\n      idTable: []\n    };\n    switch (userChoice) {\n      case 'standard':\n        this.data = {\n          accounts: [accountNumber],\n          searchText: \"\",\n          exactSearchText: this.operationTitle,\n          dateFrom: null,\n          dateTo: new Date()\n        };\n        if (this.operationMax < this.operationMin) {\n          this.data.amountFrom = this.operationMax;\n          this.data.amountTo = this.operationMin;\n        } else {\n          this.data.amountFrom = this.operationMin;\n          this.data.amountTo = this.operationMax;\n        }\n        currentUniquery = accountNumber + '(#|#)' + this.operationTitle;\n        currentUniquery += '(#|#)' + this.data.amountFrom + '(#|#)' + this.data.amountTo;\n        fixedCostToRegister.uniquery = currentUniquery;\n        neededRequest = true;\n        break;\n      case 'onetime':\n        fixedCostToRegister.uniquery = \"\";\n        fixedCostToRegister.idTable.push(this.model.get('id'));\n        break;\n      case 'custom':\n        console.log('custom not ready ');\n    }\n    if (neededRequest) {\n      return $.ajax({\n        type: \"POST\",\n        url: \"bankoperations/query\",\n        data: this.data,\n        success: (function(_this) {\n          return function(objects) {\n            var object, _i, _len;\n            if ((objects != null) && objects.length > 0) {\n              for (_i = 0, _len = objects.length; _i < _len; _i++) {\n                object = objects[_i];\n                fixedCostToRegister.idTable.push(object.id);\n              }\n              return _this.saveFixedCost(fixedCostToRegister, function() {\n                _this.destroyPopupFixedCost(event);\n                return $('#search-text').keyup();\n              });\n            } else {\n              return console.log(\"Operation(s) not found\");\n            }\n          };\n        })(this),\n        error: function(err) {\n          return console.log(\"there was an error\");\n        }\n      });\n    } else {\n      return this.saveFixedCost(fixedCostToRegister, (function(_this) {\n        return function() {\n          _this.destroyPopupFixedCost(event);\n          return $('#search-text').keyup();\n        };\n      })(this));\n    }\n  };\n\n  EntryView.prototype.switchFixedCostIcon = function(event) {\n    var jqFixedCostIcon;\n    jqFixedCostIcon = $(event.currentTarget);\n    if ((jqFixedCostIcon.attr('data-icon')) === '') {\n      return jqFixedCostIcon.attr('data-icon', '');\n    } else {\n      return jqFixedCostIcon.attr('data-icon', '');\n    }\n  };\n\n  EntryView.prototype.popupFixedCost = function(event) {\n    var idValidationBtn, jqFixedCostIcon, jqIconParent, jqPopup, newFixedCost, popupTitle;\n    jqFixedCostIcon = $(event.currentTarget);\n    jqIconParent = jqFixedCostIcon.parent();\n    newFixedCost = jqFixedCostIcon.hasClass('variable-cost');\n    popupTitle = \"Ajouter aux frais fixes\";\n    idValidationBtn = \"save-fixed-cost\";\n    if (newFixedCost) {\n      jqFixedCostIcon.attr('data-icon', '');\n    } else {\n      jqFixedCostIcon.attr('data-icon', '');\n      popupTitle = \"Retirer des frais fixes\";\n      idValidationBtn = \"remove-fixed-cost\";\n    }\n    jqPopup = $('<div class=\"popup-fixed-cost\"></div>');\n    jqFixedCostIcon.appendTo(jqPopup);\n    jqPopup.append('<span class=\"fixed-cost-title\">' + popupTitle + '</span>');\n    jqPopup.append('<button type=\"button\" id=\"' + idValidationBtn + '\" class=\"btn btn-xs btn-primary\">Valider</button>');\n    jqPopup.append('<button type=\"button\" id=\"cancel-fixed-cost\" class=\"btn btn-xs btn-danger\" >Annuler</button>');\n    this.operationTitle = this.model.get('title');\n    if (newFixedCost) {\n      this.operationMax = parseFloat((this.model.get('amount')) * 1.1);\n      this.operationMin = parseFloat((this.model.get('amount')) * 0.9);\n      jqPopup.append('<input type=\"radio\" name=\"fixed-cost-option\" value=\"standard\" checked=\"true\" /> <label>Toutes les opérations intitulées \"' + this.operationTitle + '\" d\\'un montant entre  ' + this.operationMin.money() + ' et ' + this.operationMax.money() + '</label><br />');\n      jqPopup.append('<input type=\"radio\" name=\"fixed-cost-option\" value=\"onetime\" /> <label>Seulement cette opération</label><br />');\n    } else {\n      jqPopup.append('<p>Cette action enlevera l\\'opération des frais fixes, ainsi que <strong>les autres opérations précédemment associées</strong>.</p>');\n    }\n    return jqPopup.appendTo(jqIconParent);\n  };\n\n  EntryView.prototype.saveFixedCost = function(fixedCost, callback) {\n    return $.ajax({\n      type: \"POST\",\n      url: \"rbifixedcost\",\n      data: fixedCost,\n      success: (function(_this) {\n        return function(objects) {\n          var id, _i, _len, _ref;\n          _this.model.set(\"fixedCostId\", objects.id);\n          _this.model.set(\"isFixedCost\", true);\n          _ref = fixedCost.idTable;\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            id = _ref[_i];\n            if (window.rbiActiveData.currentOperations[id] != null) {\n              window.rbiActiveData.currentOperations[id].isFixedCost = true;\n              window.rbiActiveData.currentOperations[id].fixedCostId = fixedCost.id;\n            }\n          }\n          window.views.monthlyAnalysisView.displayMonthlySums(window.rbiActiveData.currentOperations);\n          return callback();\n        };\n      })(this),\n      error: function(err) {\n        return console.log(\"there was an error\");\n      }\n    });\n  };\n\n  return EntryView;\n\n})(BaseView);\n","var BankTitleView, BaseView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nmodule.exports = BankTitleView = (function(_super) {\n  __extends(BankTitleView, _super);\n\n  BankTitleView.prototype.template = require('./templates/configuration_bank_title');\n\n  BankTitleView.prototype.tagName = 'span';\n\n  function BankTitleView(model) {\n    this.model = model;\n    BankTitleView.__super__.constructor.call(this);\n  }\n\n  BankTitleView.prototype.initialize = function() {\n    this.listenTo(this.model, 'change', this.update);\n    this.listenTo(this.model.accounts, \"add\", this.update);\n    this.listenTo(this.model.accounts, \"destroy\", this.update);\n    this.listenTo(this.model.accounts, \"request\", this.displayLoading);\n    return this.listenTo(this.model.accounts, \"change\", this.hideLoading);\n  };\n\n  BankTitleView.prototype.displayLoading = function() {\n    return this.$(\".bank-title-loading\").show();\n  };\n\n  BankTitleView.prototype.hideLoading = function() {\n    return this.$(\".bank-title-loading\").hide();\n  };\n\n  BankTitleView.prototype.update = function() {\n    this.model.set(\"amount\", this.model.accounts.getSum());\n    this.$(\".bank-amount\").html(Number(this.model.get('amount')).money());\n    if (this.model.accounts.length === 0) {\n      this.$(\".bank-title\").hide();\n      this.$(\".bank-balance\").hide();\n    } else {\n      this.$(\".bank-title\").show();\n      this.$(\".bank-balance\").show();\n    }\n    return this.$(\".bank-title-loading\").hide();\n  };\n\n  BankTitleView.prototype.render = function() {\n    BankTitleView.__super__.render.call(this);\n    this.update();\n    return this;\n  };\n\n  return BankTitleView;\n\n})(BaseView);\n","var BaseView, ComparedAnalysisView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nmodule.exports = ComparedAnalysisView = (function(_super) {\n  __extends(ComparedAnalysisView, _super);\n\n  function ComparedAnalysisView() {\n    return ComparedAnalysisView.__super__.constructor.apply(this, arguments);\n  }\n\n  ComparedAnalysisView.prototype.template = require('./templates/compared_analysis');\n\n  ComparedAnalysisView.prototype.el = 'div#interface-box';\n\n  ComparedAnalysisView.prototype.subViews = [];\n\n  ComparedAnalysisView.prototype.initialize = function() {};\n\n  ComparedAnalysisView.prototype.render = function() {\n    var view;\n    ComparedAnalysisView.__super__.render.call(this);\n    view = this;\n    return this;\n  };\n\n  return ComparedAnalysisView;\n\n})(BaseView);\n","var BaseView, ConfigurationBankView, ConfigurationView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nConfigurationBankView = require('./configuration_bank');\n\nmodule.exports = ConfigurationView = (function(_super) {\n  __extends(ConfigurationView, _super);\n\n  function ConfigurationView() {\n    return ConfigurationView.__super__.constructor.apply(this, arguments);\n  }\n\n  ConfigurationView.prototype.template = require('./templates/configuration');\n\n  ConfigurationView.prototype.el = 'div#interface-box';\n\n  ConfigurationView.prototype.elAccounts = '#account-choice';\n\n  ConfigurationView.prototype.accounts = 0;\n\n  ConfigurationView.prototype.isMonoBox = true;\n\n  ConfigurationView.prototype.subViews = [];\n\n  ConfigurationView.prototype.events = {\n    'change select#account-choice': 'reloadBudget',\n    'keyup #configuration-budget-amount': 'setBudget'\n  };\n\n  ConfigurationView.prototype.reloadBudget = function(callerId) {\n    var accountNumber, budgetByAccount, callerMirror, currentBudget;\n    if (callerId == null) {\n      callerId = null;\n    }\n    callerMirror = null;\n    if (callerId != null) {\n      if (callerId === 'account-budget-amount') {\n        callerMirror = '#configuration-budget-amount';\n      } else if (callerId === 'configuration-budget-amount') {\n        callerMirror = '#account-budget-amount';\n      }\n    }\n    accountNumber = window.rbiActiveData.accountNumber;\n    budgetByAccount = window.rbiActiveData.budgetByAccount || [];\n    currentBudget = budgetByAccount[accountNumber] || 0;\n    if (currentBudget > 0) {\n      if (callerMirror != null) {\n        return $(callerMirror).val(budgetByAccount[accountNumber]);\n      } else {\n        $('#account-budget-amount').val(budgetByAccount[accountNumber]);\n        return $('#configuration-budget-amount').val(budgetByAccount[accountNumber]);\n      }\n    } else {\n      if (callerMirror != null) {\n        return $(callerMirror).val(0);\n      } else {\n        $('#account-budget-amount').val(0);\n        return $('#configuration-budget-amount').val(0);\n      }\n    }\n  };\n\n  ConfigurationView.prototype.getLastMonthDebitAmount = function(budgetValue, callback) {\n    var criteria, now;\n    now = moment(new Date());\n    criteria = {\n      dateFrom: new Date(moment(now.startOf('month')).format('YYYY-MM-DD')),\n      dateTo: new Date(),\n      debits: true,\n      accounts: [window.rbiActiveData.accountNumber]\n    };\n    return $.ajax({\n      type: \"POST\",\n      url: \"bankoperations/byDate\",\n      data: criteria,\n      success: function(operations) {\n        var amount, operation, percentage, rest, _i, _len;\n        amount = 0;\n        for (_i = 0, _len = operations.length; _i < _len; _i++) {\n          operation = operations[_i];\n          amount += operation.amount;\n        }\n        if (!isNaN(amount)) {\n          amount = Math.abs(amount);\n          percentage = parseInt((amount / budgetValue) * 100);\n          percentage = percentage <= 100 ? percentage : 100;\n          rest = budgetValue - amount;\n          $('#current-budget-chart-debit').html(rest.money());\n          $('#current-budget-chart').attr('data-percent', percentage);\n          return callback(percentage);\n        }\n      },\n      error: function(err) {\n        return console.log(\"getting fixed cost failed.\");\n      }\n    });\n  };\n\n  ConfigurationView.prototype.setBudget = function(event, view) {\n    var accountNumber, budgetValue, jqBudgetInput;\n    budgetValue = 0;\n    jqBudgetInput = $(event.currentTarget);\n    budgetValue = jqBudgetInput.val();\n    if (!/^(\\d+(?:[\\.\\,]\\d{2})?)$/.test(budgetValue)) {\n      return $('.info-user').css('color', window.rbiColors.red).html('La valeur du budget semble incomplète ou érronée&nbsp;');\n    } else {\n      $('.info-user').css('color', 'inherit').html('Les modifications sont prises en compte instantanément&nbsp;');\n      budgetValue = parseFloat(budgetValue.replace(\" \", \"\").replace(\",\", \".\"));\n      if (isNaN(budgetValue)) {\n        budgetValue = 0;\n      }\n      if (budgetValue > 0) {\n        accountNumber = window.rbiActiveData.accountNumber;\n        window.rbiActiveData.budgetByAccount[accountNumber] = budgetValue;\n        return window.rbiActiveData.userConfiguration.save({\n          budgetByAccount: window.rbiActiveData.budgetByAccount\n        }, {\n          success: (function(_this) {\n            return function() {\n              var callerId;\n              callerId = jqBudgetInput.attr('id');\n              if (view) {\n                return view.reloadBudget(callerId);\n              } else {\n                return _this.reloadBudget(callerId);\n              }\n            };\n          })(this),\n          error: function() {\n            return console.log('Error: budget configuration not saved');\n          }\n        });\n      }\n    }\n  };\n\n  ConfigurationView.prototype.afterRender = function() {\n    var view;\n    view = this;\n    return $('#account-budget-amount').keyup(function(event) {\n      return view.setBudget(event, view);\n    });\n  };\n\n  ConfigurationView.prototype.render = function() {\n    ConfigurationView.__super__.render.call(this);\n    window.rbiActiveData.userConfiguration.fetch({\n      success: (function(_this) {\n        return function(currentConfig) {\n          var accountNumber, budgetByAccount, treatment, view;\n          accountNumber = currentConfig.get('accountNumber') || \"\";\n          if ((accountNumber != null) && accountNumber !== \"\") {\n            window.rbiActiveData.accountNumber = accountNumber;\n            budgetByAccount = currentConfig.get('budgetByAccount') || {};\n            window.rbiActiveData.budgetByAccount = budgetByAccount;\n            _this.reloadBudget();\n          } else {\n            if (window.views.appView.isLoading) {\n              window.views.appView.displayInterfaceView();\n            }\n          }\n          view = _this;\n          treatment = function(bank, callback) {\n            var viewBank;\n            viewBank = new ConfigurationBankView(bank);\n            view.subViews.push(viewBank);\n            $(view.elAccounts).append(viewBank.el);\n            return bank.accounts.fetch({\n              success: function(col) {\n                callback(null, col.length);\n                if (col.length > 0) {\n                  return viewBank.render();\n                }\n              },\n              error: function(col, err, opts) {\n                callback(null, col.length);\n                return viewBank.$el.html(\"\");\n              }\n            });\n          };\n          return async.concat(window.collections.banks.models, treatment, function(err, results) {\n            if (err) {\n              return console.log(err);\n            } else {\n              this.accounts = results.length;\n              if (this.accounts === 0) {\n                return $(view.elAccounts).prepend(require(\"./templates/configuration_bank_empty\"));\n              }\n            }\n          });\n        };\n      })(this),\n      error: function() {\n        return console.log('error during user configuration fetching process');\n      }\n    });\n    return this;\n  };\n\n  return ConfigurationView;\n\n})(BaseView);\n","var BankSubTitleView, BankTitleView, BaseView, ConfigurationBankView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nBankTitleView = require('./bank_title');\n\nBankSubTitleView = require('./configuration_bank_account');\n\nmodule.exports = ConfigurationBankView = (function(_super) {\n  __extends(ConfigurationBankView, _super);\n\n  ConfigurationBankView.prototype.className = \"unclickable-option\";\n\n  ConfigurationBankView.prototype.tagName = \"tr\";\n\n  ConfigurationBankView.prototype.attributes = {\n    'disabled': 'true'\n  };\n\n  ConfigurationBankView.prototype.sum = 0;\n\n  ConfigurationBankView.prototype.subViews = [];\n\n  function ConfigurationBankView(bank) {\n    this.bank = bank;\n    ConfigurationBankView.__super__.constructor.call(this);\n  }\n\n  ConfigurationBankView.prototype.addOne = function(account) {\n    var accountNumber, amount, viewAccount;\n    viewAccount = new BankSubTitleView(account);\n    this.subViews.push(viewAccount);\n    account.view = viewAccount;\n    this.$el.after(viewAccount.render().el);\n    accountNumber = viewAccount.model.get(\"accountNumber\");\n    amount = viewAccount.model.get(\"amount\");\n    return $(viewAccount.render().el).after('<tr class=\"bottom-margin\"><td class=\"bottom-sep\">N° ' + accountNumber + '</td><td class=\"bottom-sep\" colspan=\"3\" style=\"text-align:right;\">' + amount.money() + '</td></tr>');\n  };\n\n  ConfigurationBankView.prototype.render = function() {\n    var account, _i, _len, _ref;\n    this.viewTitle = new BankTitleView(this.bank);\n    this.$el.html(this.viewTitle.render().el);\n    this.viewTitle = null;\n    this.sum = 0;\n    _ref = this.bank.accounts.models;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      account = _ref[_i];\n      this.addOne(account);\n    }\n    return this;\n  };\n\n  ConfigurationBankView.prototype.destroy = function() {\n    var view, _i, _len, _ref, _ref1;\n    if ((_ref = this.viewTitle) != null) {\n      _ref.destroy();\n    }\n    _ref1 = this.subViews;\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      view = _ref1[_i];\n      view.destroy();\n    }\n    return ConfigurationBankView.__super__.destroy.call(this);\n  };\n\n  return ConfigurationBankView;\n\n})(BaseView);\n","var BankSubTitleView, BaseView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nmodule.exports = BankSubTitleView = (function(_super) {\n  __extends(BankSubTitleView, _super);\n\n  BankSubTitleView.prototype.tagName = 'tr';\n\n  BankSubTitleView.prototype.className = 'account-line';\n\n  BankSubTitleView.prototype.template = require('./templates/configuration_bank_account');\n\n  function BankSubTitleView(model) {\n    this.model = model;\n    BankSubTitleView.__super__.constructor.call(this);\n  }\n\n  BankSubTitleView.prototype.events = {\n    'click .btn-courant': 'chooseAccount',\n    'click .btn-epargne': 'setDepositAccount',\n    'click .btn-off': 'setOffAccount'\n  };\n\n  BankSubTitleView.prototype.initialize = function() {\n    return this.listenTo(window.activeObjects, 'changeActiveAccount', this.checkActive);\n  };\n\n  BankSubTitleView.prototype.afterRender = function() {\n    var currentAccountNumber, deposit, depositList, jqBtnDeposit, jqBtnOff, thatAccountNumber, _i, _len;\n    currentAccountNumber = window.rbiActiveData.accountNumber;\n    thatAccountNumber = this.model.get(\"accountNumber\");\n    depositList = window.rbiActiveData.userConfiguration.get(\"depositList\") || [];\n    for (_i = 0, _len = depositList.length; _i < _len; _i++) {\n      deposit = depositList[_i];\n      if (deposit === thatAccountNumber) {\n        jqBtnDeposit = this.$el.find(\".btn-epargne\");\n        jqBtnOff = this.$el.find(\".btn-off\");\n        jqBtnDeposit.removeClass(\"btn-default\").addClass(\"btn-warning\");\n        jqBtnOff.removeClass(\"btn-danger\").addClass(\"btn-default\");\n      }\n    }\n    if ((thatAccountNumber != null) && (thatAccountNumber !== \"\") && (thatAccountNumber === currentAccountNumber)) {\n      return this.chooseAccount();\n    }\n  };\n\n  BankSubTitleView.prototype.setDepositAccount = function(currentEvent) {\n    var jqBtnDeposit, otherButtons;\n    if (currentEvent != null) {\n      jqBtnDeposit = $(currentEvent.currentTarget);\n      if (jqBtnDeposit.hasClass(\"btn-default\")) {\n        otherButtons = (jqBtnDeposit.closest(\"tr\")).find(\".btn\");\n        otherButtons.removeClass(\"btn-info btn-danger\").addClass(\"btn-default\");\n        jqBtnDeposit.removeClass(\"btn-default\").addClass(\"btn-warning\");\n      }\n      return this.saveConfiguration(currentEvent);\n    }\n  };\n\n  BankSubTitleView.prototype.setOffAccount = function(currentEvent) {\n    var jqBtnOff, otherButtons;\n    if (currentEvent != null) {\n      jqBtnOff = $(currentEvent.currentTarget);\n      if (jqBtnOff.hasClass(\"btn-default\")) {\n        otherButtons = (jqBtnOff.closest(\"tr\")).find(\".btn\");\n        otherButtons.removeClass(\"btn-info btn-warning\").addClass(\"btn-default\");\n        jqBtnOff.removeClass(\"btn-default\").addClass(\"btn-danger\");\n      }\n      return this.saveConfiguration(currentEvent);\n    }\n  };\n\n  BankSubTitleView.prototype.saveConfiguration = function(currentEvent) {\n    var accountChosen, depositAccountList;\n    depositAccountList = [];\n    accountChosen = \"\";\n    $('.btn-epargne').each(function() {\n      if ($(this).hasClass(\"btn-warning\")) {\n        return depositAccountList.push($(this).attr(\"account-number\"));\n      }\n    });\n    $('.btn-courant').each(function() {\n      if ($(this).hasClass(\"btn-info\")) {\n        return accountChosen = $(this).attr(\"account-number\");\n      }\n    });\n    console.log(\"chosen : \" + accountChosen);\n    return window.rbiActiveData.userConfiguration.save({\n      accountNumber: accountChosen,\n      depositList: depositAccountList,\n      error: function() {\n        return console.log(\"Error: configuration can't be saved.\");\n      }\n    });\n  };\n\n  BankSubTitleView.prototype.chooseAccount = function(currentEvent) {\n    var thatBtnCourant, thatOtherButtons, today;\n    $(\".btn-courant\").each(function() {\n      var btnOff;\n      if ($(this).hasClass(\"btn-info\")) {\n        $(this).removeClass(\"btn-info\").addClass(\"btn-default\");\n        btnOff = ($(this).closest(\"tr\")).find(\".btn-off\");\n        return btnOff.removeClass(\"btn-default\").addClass(\"btn-danger\");\n      }\n    });\n    thatBtnCourant = this.$el.find(\".btn-courant\");\n    thatBtnCourant.removeClass(\"btn-default\").addClass(\"btn-info\");\n    thatOtherButtons = this.$el.find(\".btn\");\n    thatOtherButtons.removeClass(\"btn-warning btn-danger\").addClass(\"btn-default\");\n    window.activeObjects.trigger(\"changeActiveAccount\", this.model);\n    window.rbiActiveData.accountNumber = this.model.get('accountNumber');\n    if (currentEvent != null) {\n      this.saveConfiguration();\n    }\n    $.ajax({\n      type: \"POST\",\n      url: \"bankoperations/byDate\",\n      data: {\n        accounts: [window.rbiActiveData.accountNumber]\n      },\n      success: function(operations) {\n        var allOperationsById, operation, _i, _len;\n        allOperationsById = {};\n        for (_i = 0, _len = operations.length; _i < _len; _i++) {\n          operation = operations[_i];\n          allOperationsById[operation.id] = operation;\n        }\n        return window.rbiActiveData.allOperationsById = allOperationsById;\n      },\n      error: function() {\n        return window.rbiActiveData.allOperationsById = null;\n      }\n    });\n    window.rbiActiveData.bankAccount = this.model;\n    today = moment(new Date()).format('L');\n    $(\"#current-amount-date\").text(today);\n    $(\"#account-amount-balance\").html((this.model.get('amount')).money());\n    window.views.forecastBudgetView.displayRegularOperations();\n    return this.loadLastYearAmounts(this.model, function() {\n      window.views.appView.isLoading;\n      if (window.views.appView.isLoading) {\n        window.views.appView.displayInterfaceView();\n        window.views.monthlyAnalysisView.render();\n        return window.app.router.navigate('analyse-mensuelle', {\n          trigger: true\n        });\n      }\n    });\n  };\n\n  BankSubTitleView.prototype.checkActive = function(account) {\n    this.$(\".row\").removeClass(\"active\");\n    if (account === this.model) {\n      return this.$(\".row\").addClass(\"active\");\n    }\n  };\n\n  BankSubTitleView.prototype.loadLastYearAmounts = function(account, callback) {\n    var view;\n    view = this;\n    window.collections.amounts.reset();\n    window.collections.amounts.setAccount(account);\n    return window.collections.amounts.fetch({\n      success: function(amounts) {\n        view.setupLastYearAmountsFlot(amounts);\n        $(window).resize(function() {\n          return view.setupLastYearAmountsFlot(amounts);\n        });\n        if (callback != null) {\n          return callback();\n        }\n      },\n      error: function() {\n        return console.log(\"error fetching amounts of last year\");\n      }\n    });\n  };\n\n  BankSubTitleView.prototype.formatDate = function(date) {\n    var day, month, year;\n    day = ('0' + date.getDate()).slice(-2);\n    month = ('0' + (date.getMonth() + 1)).slice(-2);\n    year = date.getFullYear();\n    return day + '/' + month + '/' + year;\n  };\n\n  BankSubTitleView.prototype.setupLastYearAmountsFlot = function(amounts) {\n    var currentDate, dayCounter2, dayRatio, daysPerMonth, flotReadyAmounts, lastAmount, maxAmount, minAmount, numberOfDays, plot, sixMonthAgo, threeMonthAgo, view;\n    view = this;\n    this.formattedAmounts = [];\n    flotReadyAmounts = [];\n    daysPerMonth = {\n      twelve: 365,\n      six: 365 / 2,\n      three: 365 / 4\n    };\n    numberOfDays = daysPerMonth.three;\n    threeMonthAgo = new Date();\n    threeMonthAgo = threeMonthAgo.setMonth(threeMonthAgo.getMonth() - 3);\n    sixMonthAgo = new Date();\n    sixMonthAgo = sixMonthAgo.setMonth(sixMonthAgo.getMonth() - 6);\n    dayRatio = 4;\n    amounts.each(function(amount) {\n      var amountDate, currentDate1, dayCounter1;\n      if (window.rbiActiveData.olderOperationDate > moment(amount.get('date'))) {\n        window.rbiActiveData.olderOperationDate = moment(amount.get('date'));\n      }\n      currentDate1 = new Date();\n      currentDate1.setHours(12, 0, 0, 0);\n      amountDate = new Date(amount.get('date'));\n      amountDate.setHours(12, 0, 0, 0);\n      dayCounter1 = 0;\n      while ((amountDate.getTime() !== currentDate1.getTime()) && (dayCounter1 < 365)) {\n        currentDate1.setDate(currentDate1.getDate() - 1);\n        dayCounter1++;\n      }\n      if (dayCounter1 < 364) {\n        view.formattedAmounts[currentDate1.getTime()] = amount.get('amount');\n      }\n      if (currentDate1.getTime() < threeMonthAgo) {\n        return numberOfDays = daysPerMonth.six;\n      } else if (currentDate1.getTime() < sixMonthAgo) {\n        return numberOfDays = daysPerMonth.twelve;\n      }\n    });\n    currentDate = new Date();\n    currentDate.setHours(12, 0, 0, 0);\n    lastAmount = parseFloat(this.model.get('amount'));\n    minAmount = parseFloat(this.model.get('amount'));\n    maxAmount = parseFloat(this.model.get('amount'));\n    dayCounter2 = 0;\n    while (dayCounter2 < numberOfDays) {\n      if (this.formattedAmounts[currentDate.getTime()]) {\n        lastAmount = parseFloat(this.formattedAmounts[currentDate.getTime()]);\n      }\n      flotReadyAmounts.push([currentDate.getTime(), lastAmount]);\n      currentDate.setDate(currentDate.getDate() - 1);\n      if (lastAmount < minAmount) {\n        minAmount = lastAmount;\n      }\n      if (lastAmount > maxAmount) {\n        maxAmount = lastAmount;\n      }\n      dayCounter2++;\n    }\n    $(\"#max-amount\").html(maxAmount.money());\n    $(\"#min-amount\").html(minAmount.money());\n    minAmount = minAmount - 500;\n    maxAmount = maxAmount + 500;\n    flotReadyAmounts.reverse();\n    $('#amount-stats').empty();\n    return plot = $.plot(\"#amount-stats\", [\n      {\n        data: flotReadyAmounts\n      }\n    ], {\n      series: {\n        lines: {\n          show: true,\n          lineWidth: 2\n        },\n        points: {\n          show: false\n        }\n      },\n      grid: {\n        hoverable: true,\n        clickable: true,\n        borderWidth: 1,\n        tickColor: $border_color,\n        borderColor: '#eeeeee'\n      },\n      colors: [window.rbiColors.blue],\n      shadowSize: 0,\n      yaxis: {\n        min: minAmount,\n        max: maxAmount\n      },\n      xaxis: {\n        mode: \"time\",\n        minTickSize: [1, \"month\"],\n        monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre']\n      },\n      tooltip: true,\n      tooltipOpts: {\n        content: '%y.2&euro;<br /> %x',\n        xDateFormat: '%d/%m/%y'\n      }\n    });\n  };\n\n  return BankSubTitleView;\n\n})(BaseView);\n","var BaseView, ForcastBudgetView, ForecastBudgetEntryView, RegularOpStatementView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nForecastBudgetEntryView = require(\"./forecast_budget_entry\");\n\nRegularOpStatementView = require(\"./regular_op_statement\");\n\nmodule.exports = ForcastBudgetView = (function(_super) {\n  __extends(ForcastBudgetView, _super);\n\n  function ForcastBudgetView() {\n    return ForcastBudgetView.__super__.constructor.apply(this, arguments);\n  }\n\n  ForcastBudgetView.prototype.template = require('./templates/forecast_budget');\n\n  ForcastBudgetView.prototype.el = 'div#interface-box';\n\n  ForcastBudgetView.prototype.elRegularOperations = '#regular-operations';\n\n  ForcastBudgetView.prototype.currentChart = null;\n\n  ForcastBudgetView.prototype.initialize = function() {\n    return window.views.regularOpStatementView = new RegularOpStatementView($('#context-box'));\n  };\n\n  ForcastBudgetView.prototype.render = function() {\n    var accountNumber, view;\n    ForcastBudgetView.__super__.render.call(this);\n    view = this;\n    accountNumber = window.rbiActiveData.accountNumber || null;\n    if ((accountNumber != null) && (accountNumber !== \"\")) {\n      this.displayRegularOperations(accountNumber);\n      window.views.regularOpStatementView.reload();\n    }\n    return this;\n  };\n\n  ForcastBudgetView.prototype.reloadBudget = function() {\n    var budgetExpenses, currentBudget, percentage, regularOperation, rest, trToInject, _i, _len, _ref;\n    currentBudget = 0;\n    budgetExpenses = 0;\n    _ref = this.subViews;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      regularOperation = _ref[_i];\n      if ((regularOperation.rules != null) && (regularOperation.rules.queryMid != null)) {\n        if (regularOperation.rules.queryMid > 0) {\n          currentBudget += regularOperation.rules.queryMid;\n        } else if (regularOperation.rules.queryMid < 0) {\n          budgetExpenses += regularOperation.rules.queryMid;\n        }\n      }\n    }\n    budgetExpenses = Math.abs(budgetExpenses);\n    percentage = parseInt((budgetExpenses / currentBudget) * 100);\n    percentage = percentage <= 100 ? percentage : 100;\n    rest = currentBudget - budgetExpenses;\n    $('#current-budget-chart-debit').html(rest.money());\n    $('#current-budget-chart').attr('data-percent', percentage);\n    if (this.currentChart != null) {\n      $('#current-budget-chart').data('easyPieChart').update(percentage);\n    } else {\n      this.currentChart = $('#current-budget-chart').easyPieChart({\n        animate: 1500,\n        barColor: window.rbiColors.blue,\n        trackColor: window.rbiColors.border_color,\n        scaleColor: window.rbiColors.blue,\n        lineWidth: 2\n      });\n    }\n    $(\"#regular-operations-budget\").remove();\n    trToInject = '<tr id=\"regular-operations-budget\">' + \"\\t\" + \"<td><strong>Budget</strong></td>\" + \"\\t\" + \"<td><strong>\" + rest.money() + \"<strong></td>\" + \"\\t\" + \"<td>&nbsp;</td>\" + \"\\t\" + \"<td>&nbsp;</td>\" + '</tr>';\n    return $(\"tbody#regular-operations\").append(trToInject);\n  };\n\n  ForcastBudgetView.prototype.displayRegularOperations = function(accountNumber) {\n    if ((accountNumber == null) && (window.rbiActiveData.accountNumber != null)) {\n      accountNumber = window.rbiActiveData.accountNumber;\n    }\n    window.collections.regularOperations.reset();\n    window.collections.regularOperations.setAccount(accountNumber);\n    return window.collections.regularOperations.fetch({\n      success: (function(_this) {\n        return function(regularOperations, rawData) {\n          var operation, subView, _i, _len, _ref;\n          _this.subViews = [];\n          $(_this.elRegularOperations).empty();\n          _ref = regularOperations.models;\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            operation = _ref[_i];\n            subView = new ForecastBudgetEntryView(operation);\n            $(_this.elRegularOperations).append(subView.render().el);\n            _this.subViews.push(subView);\n          }\n          _this.reloadBudget();\n          return {\n            error: function() {\n              return console.log(\"error fetching regular operations\");\n            }\n          };\n        };\n      })(this)\n    });\n  };\n\n  return ForcastBudgetView;\n\n})(BaseView);\n","var BaseView, ForecastBudgetEntryView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nmodule.exports = ForecastBudgetEntryView = (function(_super) {\n  __extends(ForecastBudgetEntryView, _super);\n\n  ForecastBudgetEntryView.prototype.template = require('./templates/forecast_budget_entry');\n\n  ForecastBudgetEntryView.prototype.tagName = 'tr';\n\n  ForecastBudgetEntryView.prototype.events = {\n    \"click .toogle-monthly-budget\": \"toogleMonthlyBudget\",\n    \"click .remove-regular-operation\": \"removeRegularOperation\",\n    \"click td:eq(0),td:eq(1),td:eq(2)\": \"modifyRegularOperation\"\n  };\n\n  ForecastBudgetEntryView.prototype.rules = {};\n\n  function ForecastBudgetEntryView(model) {\n    this.model = model;\n    ForecastBudgetEntryView.__super__.constructor.call(this);\n  }\n\n  ForecastBudgetEntryView.prototype.render = function() {\n    if (this.model.get(\"uniquery\") != null) {\n      this.rules = this.deserializeUniquery(this.model.get(\"uniquery\"));\n      this.addAverageToRules();\n      this.model.set(\"rules\", this.rules);\n    }\n    ForecastBudgetEntryView.__super__.render.call(this);\n    return this;\n  };\n\n  ForecastBudgetEntryView.prototype.modifyRegularOperation = function(currentEvent) {\n    $(\"#search-regular-operations\").val(this.rules.queryPattern);\n    $(\"#search-min-amount\").val(this.rules.queryMin);\n    $(\"#search-max-amount\").val(this.rules.queryMax);\n    return $(\"#search-regular-operations\").keyup();\n  };\n\n  ForecastBudgetEntryView.prototype.deserializeUniquery = function(uniquery) {\n    var queryParts, rules;\n    queryParts = [];\n    rules = {};\n    if ((uniquery != null) && ((typeof uniquery) === \"string\")) {\n      queryParts = uniquery.split(\"(#|#)\");\n    }\n    rules.queryAccountNumber = queryParts[0] || \"\";\n    rules.queryPattern = queryParts[1] || \"\";\n    rules.queryMin = (queryParts[2] != null) && (queryParts[2] !== \"NEGATIVE_INFINITY\") ? Number(queryParts[2]) : null;\n    rules.queryMax = (queryParts[3] != null) && (queryParts[3] !== \"POSITIVE_INFINITY\") ? Number(queryParts[3]) : null;\n    return rules;\n  };\n\n  ForecastBudgetEntryView.prototype.addAverageToRules = function() {\n    var addedAmounts, allOperationsById, count, id, idTable, mid, _i, _len;\n    idTable = this.model.get(\"idTable\");\n    allOperationsById = window.rbiActiveData.allOperationsById;\n    mid = 0;\n    count = 0;\n    addedAmounts = 0;\n    if ((idTable != null) && (allOperationsById != null) && idTable.length > 0) {\n      for (_i = 0, _len = idTable.length; _i < _len; _i++) {\n        id = idTable[_i];\n        if (allOperationsById[id] != null) {\n          console.log(allOperationsById[id]);\n          addedAmounts += allOperationsById[id].amount;\n          count++;\n        }\n      }\n    }\n    if (addedAmounts !== 0) {\n      mid = addedAmounts / count;\n    }\n    this.rules.queryMid = mid;\n    return this.rules.textQueryMid = mid.money();\n  };\n\n  ForecastBudgetEntryView.prototype.removeRegularOperation = function(event) {\n    var regularOperationId;\n    regularOperationId = (this.model.get(\"id\")) || null;\n    if (regularOperationId != null) {\n      return $.ajax({\n        url: '/rbifixedcost/' + regularOperationId,\n        type: 'DELETE',\n        success: (function(_this) {\n          return function(result) {\n            window.views.forecastBudgetView.displayRegularOperations();\n            return $('#search-regular-operations').keyup();\n          };\n        })(this),\n        error: function() {\n          return console.log(\"Delete fixed cost failed.\");\n        }\n      });\n    }\n  };\n\n  return ForecastBudgetEntryView;\n\n})(BaseView);\n","var BaseView, MenuView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nmodule.exports = MenuView = (function(_super) {\n  __extends(MenuView, _super);\n\n  function MenuView() {\n    return MenuView.__super__.constructor.apply(this, arguments);\n  }\n\n  MenuView.prototype.template = require('./templates/menu');\n\n  MenuView.prototype.el = 'div#mainnav';\n\n  MenuView.prototype.subViews = [];\n\n  MenuView.prototype.initialize = function() {};\n\n  MenuView.prototype.render = function() {\n    var view;\n    MenuView.__super__.render.call(this);\n    view = this;\n    return this;\n  };\n\n  MenuView.prototype.afterRender = function() {\n    var that;\n    this.adjustPadding();\n    that = this;\n    return window.app.router.bind(\"route\", function(method) {\n      var currentMethod, currentRoute, route, _ref;\n      route = null;\n      if (method != null) {\n        _ref = window.app.router.routes;\n        for (currentRoute in _ref) {\n          currentMethod = _ref[currentRoute];\n          if ((currentRoute !== \"\") && (currentMethod === method)) {\n            route = currentRoute;\n            break;\n          }\n        }\n      }\n      if (route != null) {\n        $('.menu-item').each(function() {\n          if ($(this).children('a').attr(\"href\").replace(\"#\", \"\") === route) {\n            that.activateMenuItem($(this));\n            return false;\n          }\n        });\n      }\n      if ($(\"#context-box\").html() === \"\") {\n        return $(\"#context-box\").hide();\n      } else {\n        return $(\"#context-box\").show();\n      }\n    });\n  };\n\n  MenuView.prototype.activateMenuItem = function(jqMenuItem) {\n    if (!jqMenuItem.hasClass('active')) {\n      $('.menu-item').removeClass('active');\n      $('.current-arrow').remove();\n      jqMenuItem.addClass('active');\n      jqMenuItem.prepend($('<span class=\"current-arrow\"></span>'));\n    }\n    if ($(window).width() < 768) {\n      return window.scrollTo(0, 535);\n    }\n  };\n\n  MenuView.prototype.adjustPadding = function() {\n    return $('#mainnav .menu-item > a').each(function() {\n      var text;\n      text = $(this).text() || null;\n      if ((text.length != null) && (text.length > 25)) {\n        return $(this).css({\n          'padding-top': '10px'\n        });\n      } else if ((text.length != null) && (text.length < 11)) {\n        return $(this).css({\n          'padding-top': '20px'\n        });\n      } else {\n        return $(this).css({\n          'padding-top': '16px'\n        });\n      }\n    });\n  };\n\n  return MenuView;\n\n})(BaseView);\n","var BankStatementView, BaseView, MonthlyAnalysisView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nBankStatementView = require(\"./bank_statement\");\n\nmodule.exports = MonthlyAnalysisView = (function(_super) {\n  __extends(MonthlyAnalysisView, _super);\n\n  function MonthlyAnalysisView() {\n    return MonthlyAnalysisView.__super__.constructor.apply(this, arguments);\n  }\n\n  MonthlyAnalysisView.prototype.template = require('./templates/monthly_analysis');\n\n  MonthlyAnalysisView.prototype.el = 'div#interface-box';\n\n  MonthlyAnalysisView.prototype.subViews = [];\n\n  MonthlyAnalysisView.prototype.currentMonthStart = '';\n\n  MonthlyAnalysisView.prototype.events = {\n    'click .month-switcher': 'switchMonth',\n    'click #credits-search-btn': 'searchAllCredits',\n    'click #debits-search-btn': 'searchAllDebits',\n    'click #fixed-cost-search-btn': 'searchAllFixedCost',\n    'click #variable-cost-search-btn': 'searchAllVariableCost'\n  };\n\n  MonthlyAnalysisView.prototype.initialize = function() {\n    return this.bankStatementView = new BankStatementView($('#context-box'));\n  };\n\n  MonthlyAnalysisView.prototype.render = function() {\n    MonthlyAnalysisView.__super__.render.call(this);\n    this.switchMonth();\n    return this;\n  };\n\n  MonthlyAnalysisView.prototype.searchAllCredits = function() {\n    $('#search-text').val(\"#credits\");\n    return $('#search-text').keyup();\n  };\n\n  MonthlyAnalysisView.prototype.searchAllDebits = function() {\n    $('#search-text').val(\"#debits\");\n    return $('#search-text').keyup();\n  };\n\n  MonthlyAnalysisView.prototype.searchAllFixedCost = function() {\n    $('#search-text').val(\"#frais-fixes\");\n    return $('#search-text').keyup();\n  };\n\n  MonthlyAnalysisView.prototype.searchAllVariableCost = function() {\n    $('#search-text').val(\"#depenses\");\n    return $('#search-text').keyup();\n  };\n\n  MonthlyAnalysisView.prototype.switchMonth = function(event) {\n    var bankStatementParams, currentMonth, firstMonth, jqSwitcher, monthlyAmounts;\n    currentMonth = moment(new Date()).startOf('month').format(\"YYYY-MM-DD\");\n    firstMonth = moment(window.rbiActiveData.olderOperationDate).startOf('month').format(\"YYYY-MM-DD\");\n    $('#search-text').val(\"\");\n    if ((event != null) && (event.currentTarget != null)) {\n      jqSwitcher = $(event.currentTarget);\n      if (jqSwitcher.hasClass('previous-month')) {\n        this.currentMonthStart.subtract('months', 1).startOf('month');\n      } else if (jqSwitcher.hasClass('next-month')) {\n        this.currentMonthStart.add('months', 1).startOf('month');\n      }\n    } else {\n      this.currentMonthStart = moment(new Date()).startOf('month');\n    }\n    if ((moment(this.currentMonthStart).format(\"YYYY-MM-DD\")) === currentMonth) {\n      $('.next-month').hide();\n    } else {\n      $('.next-month').show();\n    }\n    if ((firstMonth !== currentMonth) && (moment(this.currentMonthStart).format(\"YYYY-MM-DD\") === firstMonth)) {\n      $('.previous-month').hide();\n    } else {\n      $('.previous-month').show();\n    }\n    this.$(\"#current-month\").html(moment(this.currentMonthStart).format(\"MMMM YYYY\"));\n    if (window.rbiActiveData.bankAccount != null) {\n      monthlyAmounts = this.getAmountsByMonth(this.currentMonthStart);\n      this.displayMonthlyAmounts(monthlyAmounts.previous, monthlyAmounts.next);\n      bankStatementParams = {\n        dateFrom: this.currentMonthStart,\n        dateTo: moment(this.currentMonthStart).endOf('month')\n      };\n      return this.bankStatementView.reload(bankStatementParams, (function(_this) {\n        return function(operations) {\n          _this.displayMonthlySums(operations);\n          _this.displayPieChart(operations);\n          return $(window).resize(function() {\n            return _this.displayPieChart(operations);\n          });\n        };\n      })(this));\n    }\n  };\n\n  MonthlyAnalysisView.prototype.displayMonthlyAmounts = function(previous, next) {\n    var differential, iconEvolution, sign;\n    differential = next - previous;\n    sign = '';\n    $(\"#amount-month-start\").html(previous.money());\n    $(\"#amount-month-end\").html(next.money());\n    $(\"#amount-month-differential\").empty();\n    if ((!isNaN(differential)) && differential !== 0) {\n      if (differential > 0) {\n        sign = '+';\n        iconEvolution = $('<span class=\"fs1 plain-icon-blue\" aria-hidden=\"true\" data-icon=\"&#57641;\"></span>');\n        if ($(\"#amount-month-differential\").hasClass(\"red-text\")) {\n          $(\"#amount-month-differential\").removeClass(\"red-text\").addClass(\"blue-text\");\n        }\n      } else {\n        if ($(\"#amount-month-differential\").hasClass(\"blue-text\")) {\n          $(\"#amount-month-differential\").removeClass(\"blue-text\").addClass(\"red-text\");\n        }\n        iconEvolution = $('<span class=\"fs1 plain-icon-red\" aria-hidden=\"true\" data-icon=\"&#57643;\"></span>');\n      }\n      $(\"#amount-month-differential\").append(iconEvolution);\n      return $(\"#amount-month-differential\").append(sign + differential.money());\n    }\n  };\n\n  MonthlyAnalysisView.prototype.displayMonthlySums = function(operations) {\n    var credits, debits, fixedCost, key, operation, variableCost;\n    credits = 0;\n    debits = 0;\n    fixedCost = 0;\n    variableCost = 0;\n    if (operations != null) {\n      for (key in operations) {\n        operation = operations[key];\n        if (operation.amount > 0) {\n          credits += operation.amount;\n        } else {\n          debits += operation.amount;\n        }\n        if (operation.isFixedCost && operation.amount < 0) {\n          fixedCost += operation.amount;\n        } else if ((!operation.isFixedCost) && operation.amount < 0) {\n          variableCost += operation.amount;\n        }\n      }\n    }\n    $('#credits-sum').html(credits.money());\n    $('#debits-sum').html((Math.abs(debits)).money());\n    $('#fixed-cost-sum').html((Math.abs(fixedCost)).money());\n    return $('#variable-cost-sum').html((Math.abs(variableCost)).money());\n  };\n\n  MonthlyAnalysisView.prototype.displayPieChart = function(operations) {\n    var amount, chartColors, dataTable, finalObj, finalType, id, isKnownType, obj, operation, operationTypes, others, pattern, raw, type, _i, _len, _ref;\n    $('#pie_chart').empty();\n    dataTable = [];\n    chartColors = [];\n    operationTypes = {\n      withdrawals: {\n        name: \"Retraits\",\n        amount: 0,\n        color: \"#8ecf67\",\n        patterns: [/^CARTE \\w+ RETRAIT DAB.* (0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[012]).*/g, /^CARTE \\w+ (0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[012]).* RETRAIT DAB.*/g, /^CARTE RETRAIT .*/g, /RETRAIT DAB (0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012]).*/g]\n      },\n      payback: {\n        name: 'Remboursements',\n        amount: 0,\n        color: \"#fac567\",\n        patterns: [/^CARTE \\w+ REMBT (0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[012]).*/g]\n      },\n      carte: {\n        name: \"CB\",\n        amount: 0,\n        color: \"#F08C56\",\n        patterns: [/^CARTE \\w+ (0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[012]) .*/g, /^CARTE (0[1-9]|[12][0-9]|3[01])(0[1-9]|1[012]).* \\d+ .*/g]\n      },\n      orders: {\n        name: 'Prélèvements',\n        amount: 0,\n        color: \"#87ceeb\",\n        patterns: [/^(COTISATION|PRELEVEMENT|TELEREGLEMENT|TIP) .*/g, /^(PRLV|PRELEVEMENT) .*$/g, /^.* QUITTANCE .*/g]\n      },\n      transfer: {\n        name: 'Virements',\n        amount: 0,\n        color: \"#f74e4d\",\n        patterns: [/^(\\d+ )?VIR (PERM )?POUR: (.*?) (REF: \\d+ )?MOTIF: (.*)/g, /^(VIR(EMEN)?T?) \\w+ (.*)/g, /^VIR COOPA (0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[012]) (.*)/g, /^VIR(EMENT|EMT)? (.*?)(- .*)?$/g]\n      },\n      check: {\n        name: \"Chèques\",\n        amount: 0,\n        color: \"#28D8CA\",\n        patterns: [/^(CHEQUE) (.*)/g, /^CHEQUE.*/g]\n      },\n      bank: {\n        name: \"Frais bancaires\",\n        amount: 0,\n        color: \"#8E3CBE\",\n        patterns: [/^(FRAIS) (.*)/g, /^(AGIOS \\/|FRAIS) (.*)/g, /^ABONNEMENT (.*)/g]\n      },\n      loan_payment: {\n        name: \"Prêts\",\n        amount: 0,\n        color: '#CF68C1',\n        patterns: [/^ECHEANCEPRET(.*)/g]\n      },\n      deposit: {\n        name: 'Remise de chèques',\n        amount: 0,\n        color: '#4D3CBE',\n        patterns: [/^REMISE CHEQUES(.*)/g, /^REMISE (.*)/g]\n      }\n    };\n    others = {\n      name: \"Autres\",\n      amount: 0,\n      color: \"#b0b0b0\"\n    };\n    for (id in operations) {\n      operation = operations[id];\n      if (operation.amount < 0) {\n        isKnownType = false;\n        raw = operation.raw.toLocaleUpperCase();\n        amount = Math.abs(operation.amount);\n        for (type in operationTypes) {\n          obj = operationTypes[type];\n          if (!isKnownType) {\n            _ref = obj.patterns;\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n              pattern = _ref[_i];\n              if (raw.search(pattern) >= 0) {\n                obj.amount += amount;\n                isKnownType = true;\n                break;\n              }\n            }\n          }\n        }\n        if (!isKnownType) {\n          others.amount += amount;\n        }\n      }\n    }\n    for (finalType in operationTypes) {\n      finalObj = operationTypes[finalType];\n      if (finalObj.amount > 0) {\n        dataTable.push([finalObj.name, finalObj.amount]);\n        chartColors.push(finalObj.color);\n      }\n    }\n    if (others.amount > 0) {\n      dataTable.push([others.name, others.amount]);\n      chartColors.push(others.color);\n    }\n    if (dataTable.length > 1) {\n      return this.createFlotPieChart(dataTable, chartColors);\n    }\n  };\n\n  MonthlyAnalysisView.prototype.createFlotPieChart = function(dataTable, chartColors) {\n    var data, entry, index, item, labelFormatter, _i, _len;\n    data = [];\n    for (index = _i = 0, _len = dataTable.length; _i < _len; index = ++_i) {\n      item = dataTable[index];\n      entry = {\n        label: item[0],\n        data: item[1],\n        color: chartColors[index]\n      };\n      data.push(entry);\n    }\n    labelFormatter = function(label, series) {\n      return \"<div style='font-size:8pt; text-align:center; padding:2px; color:white;'>\" + label + \"<br/>\" + series.data[0][1].money() + \"</div>\";\n    };\n    return $.plot('#pie_chart', data, {\n      series: {\n        pie: {\n          show: true,\n          radius: 1,\n          label: {\n            show: true,\n            radius: 3 / 5,\n            formatter: labelFormatter,\n            background: {\n              opacity: 0.5\n            }\n          }\n        },\n        legend: {\n          show: true,\n          labelFormatter: null,\n          labelBoxBorderColor: null,\n          position: \"ne\"\n        }\n      }\n    });\n  };\n\n  MonthlyAnalysisView.prototype.getAmountsByMonth = function(monthStart) {\n    var amount, currentAmounts, currentDate, monthEnd, monthlyAmounts, nextAmount, nextDate, previousAmount, previousDate, _i, _len;\n    monthlyAmounts = [];\n    monthStart = moment(monthStart);\n    monthEnd = moment(moment(monthStart).endOf('month'));\n    nextAmount = (window.rbiActiveData.bankAccount.get('amount')) || null;\n    previousAmount = nextAmount;\n    nextDate = null;\n    previousDate = null;\n    currentAmounts = window.collections.amounts.models;\n    if ((currentAmounts != null) && currentAmounts.length > 0) {\n      for (_i = 0, _len = currentAmounts.length; _i < _len; _i++) {\n        amount = currentAmounts[_i];\n        currentDate = moment(amount.get('date'));\n        if (currentDate > monthEnd && currentDate <= moment()) {\n          if (nextDate == null) {\n            nextDate = moment(amount.get('date'));\n          }\n          if (currentDate < nextDate) {\n            nextAmount = amount.get('amount');\n            previousAmount = nextAmount;\n            nextDate = moment(amount.get('date'));\n          }\n        } else if (currentDate >= monthStart && currentDate <= monthEnd) {\n          if ((previousDate == null) || (currentDate < previousDate)) {\n            previousAmount = amount.get('amount');\n            previousDate = moment(amount.get('date'));\n          }\n        }\n      }\n    }\n    return monthlyAmounts = {\n      next: parseFloat(nextAmount),\n      previous: parseFloat(previousAmount)\n    };\n  };\n\n  return MonthlyAnalysisView;\n\n})(BaseView);\n","var BaseView, OnlineShoppingView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nmodule.exports = OnlineShoppingView = (function(_super) {\n  __extends(OnlineShoppingView, _super);\n\n  function OnlineShoppingView() {\n    return OnlineShoppingView.__super__.constructor.apply(this, arguments);\n  }\n\n  OnlineShoppingView.prototype.template = require('./templates/online_shopping');\n\n  OnlineShoppingView.prototype.el = 'div#interface-box';\n\n  OnlineShoppingView.prototype.subViews = [];\n\n  OnlineShoppingView.prototype.initialize = function() {};\n\n  OnlineShoppingView.prototype.render = function() {\n    var view;\n    OnlineShoppingView.__super__.render.call(this);\n    view = this;\n    return this;\n  };\n\n  return OnlineShoppingView;\n\n})(BaseView);\n","var BaseView, RegularOpStatementEntryView, RegularOpStatementView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nRegularOpStatementEntryView = require(\"./regular_op_statement_entry\");\n\nmodule.exports = RegularOpStatementView = (function(_super) {\n  var params, subViewLastDate;\n\n  __extends(RegularOpStatementView, _super);\n\n  RegularOpStatementView.prototype.templateHeader = require('./templates/regular_op_statement_header');\n\n  RegularOpStatementView.prototype.events = {\n    'keyup input#search-regular-operations': \"reload\",\n    'keyup input#search-min-amount': \"reload\",\n    'keyup input#search-max-amount': \"reload\",\n    'click .add-regular-operation': \"addToRegularOperation\",\n    'click #empty-search-regular-operations': \"emptyAllFields\"\n  };\n\n  RegularOpStatementView.prototype.inUse = false;\n\n  RegularOpStatementView.prototype.subViews = [];\n\n  subViewLastDate = '';\n\n  params = null;\n\n  function RegularOpStatementView(el) {\n    this.el = el;\n    RegularOpStatementView.__super__.constructor.call(this);\n  }\n\n  RegularOpStatementView.prototype.render = function() {\n    this.$el.html(require(\"./templates/regular_op_statement_empty\"));\n    return this;\n  };\n\n  RegularOpStatementView.prototype.emptyAllFields = function() {\n    $(\"input#search-regular-operations\").val(\"\");\n    $(\"#search-min-amount\").val(\"\");\n    $(\"#search-max-amount\").val(\"\");\n    return $(\"input#search-regular-operations\").keyup();\n  };\n\n  RegularOpStatementView.prototype.getCurrentRules = function() {\n    var rules;\n    rules = null;\n    if (window.rbiActiveData.bankAccount != null) {\n      rules = {\n        accountNumber: window.rbiActiveData.bankAccount.get('accountNumber'),\n        pattern: $(\"input#search-regular-operations\").val() || null,\n        minAmount: $(\"#search-min-amount\").val() || null,\n        maxAmount: $(\"#search-max-amount\").val() || null\n      };\n      if (rules.minAmount != null) {\n        rules.minAmount = parseFloat(rules.minAmount).toFixed(2);\n      }\n      if (rules.maxAmount != null) {\n        rules.maxAmount = parseFloat(rules.maxAmount).toFixed(2);\n      }\n    }\n    return rules;\n  };\n\n  RegularOpStatementView.prototype.serializeUniquery = function(rules) {\n    var maxAmount, minAmount, separator, uniquery;\n    uniquery = \"\";\n    separator = \"(#|#)\";\n    if ((rules != null) && (rules.accountNumber != null)) {\n      uniquery = rules.accountNumber;\n      if (rules.pattern != null) {\n        uniquery += separator + rules.pattern;\n        minAmount = rules.minAmount || \"NEGATIVE_INFINITY\";\n        maxAmount = rules.maxAmount || \"POSITIVE_INFINITY\";\n        uniquery += separator + minAmount;\n        uniquery += separator + maxAmount;\n      }\n    }\n    console.log(uniquery);\n    return uniquery;\n  };\n\n  RegularOpStatementView.prototype.addToRegularOperation = function() {\n    var data, rules;\n    rules = this.getCurrentRules() || null;\n    if (rules != null) {\n      data = {\n        accounts: [rules.accountNumber],\n        searchText: rules.pattern.toString(),\n        exactSearchText: \"\",\n        amountFrom: rules.minAmount,\n        amountTo: rules.maxAmount\n      };\n      return $.ajax({\n        type: \"POST\",\n        url: \"bankoperations/query\",\n        data: data,\n        success: (function(_this) {\n          return function(objects) {\n            var fixedCostToRegister, object, _i, _len;\n            console.log(objects);\n            console.log(\"get operation linked request sent successfully!\");\n            if ((objects != null) && objects.length > 0) {\n              fixedCostToRegister = {\n                type: \"standard\",\n                accountNumber: rules.accountNumber,\n                idTable: [],\n                uniquery: _this.serializeUniquery(rules),\n                isBudgetPart: true\n              };\n              for (_i = 0, _len = objects.length; _i < _len; _i++) {\n                object = objects[_i];\n                fixedCostToRegister.idTable.push(object.id);\n              }\n              return _this.saveFixedCost(fixedCostToRegister, function() {\n                $('#search-regular-operations').keyup();\n                return window.views.forecastBudgetView.displayRegularOperations(rules.accountNumber);\n              });\n            } else {\n              return console.log(\"Operation(s) not found\");\n            }\n          };\n        })(this),\n        error: function(err) {\n          return console.log(\"there was an error\");\n        }\n      });\n    } else {\n      return console.log(\"no rules.\");\n    }\n  };\n\n  RegularOpStatementView.prototype.saveFixedCost = function(fixedCost, callback) {\n    console.log(\"save !\");\n    return $.ajax({\n      type: \"POST\",\n      url: \"rbifixedcost\",\n      data: fixedCost,\n      success: (function(_this) {\n        return function(objects) {\n          console.log(\"saved !\");\n          return callback();\n        };\n      })(this),\n      error: function(err) {\n        return console.log(\"there was an error\");\n      }\n    });\n  };\n\n  RegularOpStatementView.prototype.checkButtonAddState = function() {\n    var buttonAdd, searchInput;\n    searchInput = $(\"input#search-regular-operations\") || null;\n    buttonAdd = $(\".add-regular-operation\") || null;\n    if ((buttonAdd != null) && (searchInput != null) && (buttonAdd.length === 1) && (searchInput.length === 1)) {\n      if (searchInput.val() !== \"\") {\n        return buttonAdd.attr(\"disabled\", false);\n      } else {\n        return buttonAdd.attr(\"disabled\", true);\n      }\n    }\n  };\n\n  RegularOpStatementView.prototype.reload = function(params, callback) {\n    var displayFixedCosts, displayVariableCosts, view;\n    this.checkButtonAddState();\n    view = this;\n    this.model = window.rbiActiveData.bankAccount;\n    if ((params != null) && (params.dateFrom != null)) {\n      this.params = params;\n    }\n    if (this.model != null) {\n      this.updateFilters();\n      if (this.$(\"#table-regular-operations\").length === 0) {\n        this.$el.html(this.templateHeader({\n          model: this.model\n        }));\n      }\n    }\n    displayFixedCosts = this.data != null ? this.data.fixedCosts || false : false;\n    displayVariableCosts = this.data != null ? this.data.variableCosts || false : false;\n    if (this.send) {\n      return $.ajax({\n        type: \"POST\",\n        url: \"bankoperations/byDate\",\n        data: this.data,\n        success: function(operations) {\n          if (operations) {\n            return $.ajax({\n              type: \"GET\",\n              url: \"rbifixedcost\",\n              success: (function(_this) {\n                return function(fixedCosts) {\n                  var finalOperations, fixedCost, index, operation, operationRemoved, _i, _j, _len, _len1;\n                  window.rbiActiveData.currentOperations = {};\n                  finalOperations = [];\n                  for (index = _i = 0, _len = operations.length; _i < _len; index = ++_i) {\n                    operation = operations[index];\n                    operation.isFixedCost = false;\n                    if (operation.amount < 0) {\n                      for (_j = 0, _len1 = fixedCosts.length; _j < _len1; _j++) {\n                        fixedCost = fixedCosts[_j];\n                        if ($.inArray(operation.id, fixedCost.idTable) >= 0) {\n                          operation.isFixedCost = true;\n                          operation.fixedCostId = fixedCost.id;\n                          break;\n                        }\n                      }\n                    }\n                    operationRemoved = false;\n                    if (!operationRemoved) {\n                      finalOperations.push(operation);\n                      window.rbiActiveData.currentOperations[operation.id] = operation;\n                    }\n                  }\n                  if (callback != null) {\n                    callback(window.rbiActiveData.currentOperations);\n                  }\n                  window.collections.operations.reset(finalOperations);\n                  window.collections.operations.setComparator(\"date\");\n                  window.collections.operations.sort();\n                  return view.addAll();\n                };\n              })(this),\n              error: function(err) {\n                return console.log(\"getting fixed cost failed.\");\n              }\n            });\n          } else {\n            return window.collections.operations.reset();\n          }\n        },\n        error: function(err) {\n          console.log(\"there was an error\");\n          if (callback != null) {\n            return callback(null);\n          }\n        }\n      });\n    }\n  };\n\n  RegularOpStatementView.prototype.updateFilters = function() {\n    var accountNumber, amountFromVal, amountToVal, dateFrom, dateFromVal, dateTo, dateToVal, jqAmountMax, jqAmountMin, now, searchTextVal;\n    jqAmountMin = $(\"#search-min-amount\").length === 1 ? ($(\"#search-min-amount\").val()).replace(\",\", \".\") : null;\n    jqAmountMax = $(\"#search-max-amount\").length === 1 ? ($(\"#search-max-amount\").val()).replace(\",\", \".\") : null;\n    amountFromVal = (parseFloat(jqAmountMin).toFixed(2)) || Number.NEGATIVE_INFINITY;\n    amountToVal = (parseFloat(jqAmountMax).toFixed(2)) || Number.POSITIVE_INFINITY;\n    now = new Date();\n    dateFrom = moment(moment(now).subtract('y', 1)).format('YYYY-MM-DD');\n    dateTo = moment(now).format('YYYY-MM-DD');\n    if (!(dateFrom || dateTo)) {\n      this.send = false;\n      window.collections.operations.reset();\n      return;\n    } else {\n      this.send = true;\n    }\n    if (window.rbiActiveData.bankAccount != null) {\n      accountNumber = window.rbiActiveData.bankAccount.get('accountNumber');\n    } else {\n      this.send = false;\n    }\n    dateFromVal = new Date(dateFrom || null);\n    dateToVal = new Date(dateTo || new Date());\n    this.data = {\n      dateFrom: dateFromVal,\n      dateTo: dateToVal,\n      accounts: [accountNumber],\n      amountFrom: amountFromVal,\n      amountTo: amountToVal\n    };\n    searchTextVal = $(\"input#search-regular-operations\").val();\n    if ((searchTextVal != null) && (searchTextVal !== \"\")) {\n      if (searchTextVal === \"#credits\") {\n        return this.data.credits = true;\n      } else if (searchTextVal === \"#debits\") {\n        return this.data.debits = true;\n      } else if (searchTextVal === \"#frais-fixes\") {\n        return this.data.fixedCosts = true;\n      } else if (searchTextVal === \"#depenses\") {\n        return this.data.variableCosts = true;\n      } else {\n        return this.data.searchText = searchTextVal;\n      }\n    }\n  };\n\n  RegularOpStatementView.prototype.addAll = function() {\n    var index, operation, subView, subViewDate, view, _i, _j, _len, _len1, _ref, _ref1, _results;\n    this.$(\"#table-regular-operations\").html(\"\");\n    this.$(\".loading\").remove();\n    _ref = this.subViews;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      view = _ref[_i];\n      view.destroy();\n      this.subViews = [];\n    }\n    if (window.collections.operations.models.length === 0) {\n      $(\"#table-regular-operations\").append($('<tr><td>Aucune opération ne correspond à ces critères.</td></tr>'));\n      return;\n    }\n    _ref1 = window.collections.operations.models;\n    _results = [];\n    for (index = _j = 0, _len1 = _ref1.length; _j < _len1; index = ++_j) {\n      operation = _ref1[index];\n      subView = new RegularOpStatementEntryView(operation, this.model);\n      subViewDate = subView.render().model.get('date');\n      if ((this.subViewLastDate !== subViewDate) || (index === 0)) {\n        this.subViewLastDate = subViewDate;\n        this.$(\"#table-regular-operations\").append($('<tr class=\"special\"><td colspan=\"4\">' + moment(this.subViewLastDate).format(\"DD/MM/YYYY\" + '</td></tr>')));\n        _results.push(this.$(\"#table-regular-operations\").append(subView.render().el));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  RegularOpStatementView.prototype.destroy = function() {\n    var view, _i, _len, _ref, _ref1, _results;\n    if ((_ref = this.viewTitle) != null) {\n      _ref.destroy();\n    }\n    _ref1 = this.subViews;\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      view = _ref1[_i];\n      view.destroy();\n      _results.push(RegularOpStatementView.__super__.destroy.call(this));\n    }\n    return _results;\n  };\n\n  return RegularOpStatementView;\n\n})(BaseView);\n","var BaseView, RegularOpStatementEntryView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nmodule.exports = RegularOpStatementEntryView = (function(_super) {\n  __extends(RegularOpStatementEntryView, _super);\n\n  RegularOpStatementEntryView.prototype.template = require('./templates/regular_op_statement_entry');\n\n  RegularOpStatementEntryView.prototype.tagName = 'tr';\n\n  RegularOpStatementEntryView.prototype.events = {\n    'click': 'applySearch'\n  };\n\n  function RegularOpStatementEntryView(model, account, showAccountNum) {\n    this.model = model;\n    this.account = account;\n    this.showAccountNum = showAccountNum != null ? showAccountNum : false;\n    RegularOpStatementEntryView.__super__.constructor.call(this);\n  }\n\n  RegularOpStatementEntryView.prototype.render = function() {\n    var hint;\n    if (this.model.get(\"amount\") > 0) {\n      this.$el.addClass(\"success\");\n    }\n    this.model.account = this.account;\n    this.model.formattedDate = moment(this.model.get('date')).format(\"DD/MM/YYYY\");\n    if ((this.model.get('amount')) > 0) {\n      this.model.costClass = 'not-displayed-cost';\n    } else {\n      this.model.costClass = \"variable-cost\";\n      this.model.costIcon = \"&#57482;\";\n      if (this.model.get('isFixedCost')) {\n        this.model.costClass = \"fixed-cost\";\n        this.model.costIcon = \"&#57481;\";\n      }\n    }\n    if (this.showAccountNum) {\n      hint = (\"\" + (this.model.account.get('title')) + \", \") + (\"n°\" + (this.model.account.get('accountNumber')));\n      this.model.hint = (\"\" + (this.model.account.get('title')) + \", \") + (\"n°\" + (this.model.account.get('accountNumber')));\n    } else {\n      this.model.hint = \"\" + (this.model.get('raw'));\n    }\n    RegularOpStatementEntryView.__super__.render.call(this);\n    return this;\n  };\n\n  RegularOpStatementEntryView.prototype.applySearch = function() {\n    var currentAmount, maxAmount, minAmount, modifier, title;\n    currentAmount = parseFloat(this.model.get(\"amount\") || 0);\n    modifier = Math.abs(parseFloat(currentAmount * 0.1));\n    title = (this.model.get('title') || \"\").toString();\n    minAmount = (currentAmount - modifier).toFixed(2);\n    maxAmount = (currentAmount + modifier).toFixed(2);\n    $(\"input#search-regular-operations\").val(title);\n    if (minAmount !== 0) {\n      $(\"#search-min-amount\").val(minAmount);\n    }\n    if (maxAmount !== 0) {\n      $(\"#search-max-amount\").val(maxAmount);\n    }\n    return $(\"input#search-regular-operations\").keyup();\n  };\n\n  RegularOpStatementEntryView.prototype.destroyPopupFixedCost = function(event) {\n    var jqCaller, jqFixedCostIcon, jqParent, jqPopup;\n    jqCaller = $(event.currentTarget);\n    jqPopup = jqCaller.parent();\n    jqParent = jqPopup.parent();\n    jqFixedCostIcon = jqPopup.children('.iconCostType');\n    jqFixedCostIcon.appendTo(jqParent);\n    jqPopup.remove();\n    if (jqCaller.attr('id') === 'cancel-fixed-cost') {\n      return jqFixedCostIcon.mouseleave();\n    } else {\n      if (jqFixedCostIcon.hasClass('variable-cost')) {\n        return jqFixedCostIcon.removeClass('variable-cost').addClass('fixed-cost');\n      } else {\n        return jqFixedCostIcon.removeClass('fixed-cost').addClass('variable-cost');\n      }\n    }\n  };\n\n  RegularOpStatementEntryView.prototype.removeFixedCost = function(event) {\n    var fixedCostId;\n    fixedCostId = this.model.get(\"fixedCostId\" || null);\n    if (fixedCostId != null) {\n      return $.ajax({\n        url: '/rbifixedcost/' + fixedCostId,\n        type: 'DELETE',\n        success: (function(_this) {\n          return function(result) {\n            var id, operation, _ref;\n            console.log(\"Delete fixed cost success.\");\n            _this.destroyPopupFixedCost(event);\n            $('#search-text').keyup();\n            if (window.rbiActiveData.currentOperations != null) {\n              _ref = window.rbiActiveData.currentOperations;\n              for (id in _ref) {\n                operation = _ref[id];\n                if ((operation.fixedCostId != null) && (operation.fixedCostId = fixedCostId)) {\n                  operation.isFixedCost = false;\n                  operation.fixedCostId = null;\n                }\n              }\n              return window.views.monthlyAnalysisView.displayMonthlySums(window.rbiActiveData.currentOperations);\n            }\n          };\n        })(this),\n        error: function() {\n          return console.log(\"Delete fixed cost failed.\");\n        }\n      });\n    }\n  };\n\n  RegularOpStatementEntryView.prototype.prepareFixedCost = function(event) {\n    var accountNumber, currentUniquery, fixedCostToRegister, jqPopup, neededRequest, userChoice;\n    jqPopup = $(event.currentTarget).parent();\n    userChoice = jqPopup.children('input[type=radio]:checked').val();\n    accountNumber = window.rbiActiveData.bankAccount.get('accountNumber');\n    neededRequest = false;\n    fixedCostToRegister = {\n      type: userChoice,\n      accountNumber: accountNumber,\n      idTable: []\n    };\n    switch (userChoice) {\n      case 'standard':\n        this.data = {\n          accounts: [accountNumber],\n          searchText: \"\",\n          exactSearchText: this.operationTitle,\n          dateFrom: null,\n          dateTo: new Date()\n        };\n        if (this.operationMax < this.operationMin) {\n          this.data.amountFrom = this.operationMax;\n          this.data.amountTo = this.operationMin;\n        } else {\n          this.data.amountFrom = this.operationMin;\n          this.data.amountTo = this.operationMax;\n        }\n        currentUniquery = accountNumber + '(#|#)' + this.operationTitle;\n        currentUniquery += '(#|#)' + this.data.amountFrom + '(#|#)' + this.data.amountTo;\n        fixedCostToRegister.uniquery = currentUniquery;\n        neededRequest = true;\n        break;\n      case 'onetime':\n        fixedCostToRegister.uniquery = \"\";\n        fixedCostToRegister.idTable.push(this.model.get('id'));\n        break;\n      case 'custom':\n        console.log('custom not ready ');\n    }\n    if (neededRequest) {\n      return $.ajax({\n        type: \"POST\",\n        url: \"bankoperations/query\",\n        data: this.data,\n        success: (function(_this) {\n          return function(objects) {\n            var object, _i, _len;\n            if ((objects != null) && objects.length > 0) {\n              for (_i = 0, _len = objects.length; _i < _len; _i++) {\n                object = objects[_i];\n                fixedCostToRegister.idTable.push(object.id);\n              }\n              return _this.saveFixedCost(fixedCostToRegister, function() {\n                _this.destroyPopupFixedCost(event);\n                return $('#search-text').keyup();\n              });\n            } else {\n              return console.log(\"Operation(s) not found\");\n            }\n          };\n        })(this),\n        error: function(err) {\n          return console.log(\"there was an error\");\n        }\n      });\n    } else {\n      return this.saveFixedCost(fixedCostToRegister, (function(_this) {\n        return function() {\n          _this.destroyPopupFixedCost(event);\n          return $('#search-text').keyup();\n        };\n      })(this));\n    }\n  };\n\n  RegularOpStatementEntryView.prototype.switchFixedCostIcon = function(event) {\n    var jqFixedCostIcon;\n    jqFixedCostIcon = $(event.currentTarget);\n    if ((jqFixedCostIcon.attr('data-icon')) === '') {\n      return jqFixedCostIcon.attr('data-icon', '');\n    } else {\n      return jqFixedCostIcon.attr('data-icon', '');\n    }\n  };\n\n  RegularOpStatementEntryView.prototype.popupFixedCost = function(event) {\n    var idValidationBtn, jqFixedCostIcon, jqIconParent, jqPopup, newFixedCost, popupTitle;\n    jqFixedCostIcon = $(event.currentTarget);\n    jqIconParent = jqFixedCostIcon.parent();\n    newFixedCost = jqFixedCostIcon.hasClass('variable-cost');\n    popupTitle = \"Ajouter aux frais fixes\";\n    idValidationBtn = \"save-fixed-cost\";\n    if (newFixedCost) {\n      jqFixedCostIcon.attr('data-icon', '');\n    } else {\n      jqFixedCostIcon.attr('data-icon', '');\n      popupTitle = \"Retirer des frais fixes\";\n      idValidationBtn = \"remove-fixed-cost\";\n    }\n    jqPopup = $('<div class=\"popup-fixed-cost\"></div>');\n    jqFixedCostIcon.appendTo(jqPopup);\n    jqPopup.append('<span class=\"fixed-cost-title\">' + popupTitle + '</span>');\n    jqPopup.append('<button type=\"button\" id=\"' + idValidationBtn + '\" class=\"btn btn-xs btn-primary\">Valider</button>');\n    jqPopup.append('<button type=\"button\" id=\"cancel-fixed-cost\" class=\"btn btn-xs btn-danger\" >Annuler</button>');\n    this.operationTitle = this.model.get('title');\n    if (newFixedCost) {\n      this.operationMax = parseFloat((this.model.get('amount')) * 1.1);\n      this.operationMin = parseFloat((this.model.get('amount')) * 0.9);\n      jqPopup.append('<input type=\"radio\" name=\"fixed-cost-option\" value=\"standard\" checked=\"true\" /> <label>Toutes les opérations intitulées \"' + this.operationTitle + '\" d\\'un montant entre  ' + this.operationMin.money() + ' et ' + this.operationMax.money() + '</label><br />');\n      jqPopup.append('<input type=\"radio\" name=\"fixed-cost-option\" value=\"onetime\" /> <label>Seulement cette opération</label><br />');\n    } else {\n      jqPopup.append('<p>Cette action enlevera l\\'opération des frais fixes, ainsi que <strong>les autres opérations précédemment associées</strong>.</p>');\n    }\n    return jqPopup.appendTo(jqIconParent);\n  };\n\n  RegularOpStatementEntryView.prototype.saveFixedCost = function(fixedCost, callback) {\n    return $.ajax({\n      type: \"POST\",\n      url: \"rbifixedcost\",\n      data: fixedCost,\n      success: (function(_this) {\n        return function(objects) {\n          var id, _i, _len, _ref;\n          _this.model.set(\"fixedCostId\", objects.id);\n          _this.model.set(\"isFixedCost\", true);\n          _ref = fixedCost.idTable;\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            id = _ref[_i];\n            if (window.rbiActiveData.currentOperations[id] != null) {\n              window.rbiActiveData.currentOperations[id].isFixedCost = true;\n              window.rbiActiveData.currentOperations[id].fixedCostId = fixedCost.id;\n            }\n          }\n          window.views.monthlyAnalysisView.displayMonthlySums(window.rbiActiveData.currentOperations);\n          return callback();\n        };\n      })(this),\n      error: function(err) {\n        return console.log(\"there was an error\");\n      }\n    });\n  };\n\n  return RegularOpStatementEntryView;\n\n})(BaseView);\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<h1>Alertes</h1><div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<br/><br/><p class=\"loading\"></p>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<td class=\"operation-title\">' + escape((interp = model.get('title')) == null ? '' : interp) + '</td><td class=\"operation-amount text-right\">' + escape((interp = Number(model.get('amount')).money()) == null ? '' : interp) + '</td><td class=\"text-right\"><div class=\"popup-container\"><span');\nbuf.push(attrs({ 'aria-hidden':(\"true\"), 'data-icon':(\"\" + (model.costIcon) + \"\"), \"class\": ('fs1') + ' ' + ('iconCostType') + ' ' + (\"\" + (model.costClass) + \"\") }, {\"class\":true,\"aria-hidden\":true,\"data-icon\":true}));\nbuf.push('></span></div></td>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<h2>Relevé du ' + escape((interp = model.get('title')) == null ? '' : interp) + ' ' + escape((interp = model.get(\"accountNumber\")) == null ? '' : interp) + '</h2><div class=\"search-field\"><span aria-hidden=\"true\" data-icon&#57471;=\"data-icon&#57471;\" class=\"icon-search fs1\"></span><input id=\"search-text\"/></div><div class=\"text-center loading loader-operations\"><img src=\"./loader_big_blue.gif\"/></div><table class=\"table table-bordered table-condensed table-striped table-hover table-bordered dataTable\"><tbody id=\"table-operations\"></tbody></table>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<h1>Analyse comparée</h1><div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<h1>Paramètres</h1><div class=\"configuration-interface\"><p>Veuillez selectionner le compte courant lié à votre relevé malin.</p><table id=\"account-choice\" class=\"col-md-12\"></table><br/><br/><p>Si vos comptes n\\'apparaissent pas ici, veuillez les ajouter dans l\\'application \"MesComptes\".</p></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<td>' + escape((interp = model.get('title')) == null ? '' : interp) + '</td><td class=\"w75px\"><button');\nbuf.push(attrs({ 'type':(\"button\"), 'account-number':(\"\" + (model.get('accountNumber')) + \"\"), \"class\": ('btn') + ' ' + ('btn-xs') + ' ' + ('btn-default') + ' ' + ('btn-courant') }, {\"type\":true,\"account-number\":true}));\nbuf.push('>courant</button></td><td class=\"w50px\"><button');\nbuf.push(attrs({ 'type':(\"button\"), 'account-number':(\"\" + (model.get('accountNumber')) + \"\"), \"class\": ('btn') + ' ' + ('btn-xs') + ' ' + ('btn-default') + ' ' + ('btn-epargne') }, {\"type\":true,\"account-number\":true}));\nbuf.push('>épargne</button></td><td class=\"w25px\"><button type=\"button\" class=\"btn btn-xs btn-danger btn-off\">off</button></td>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<td colspan=\"3\">' + escape((interp = model.get('name')) == null ? '' : interp) + '</td>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<h1>Budget prévisionnel</h1><div id=\"forecast-budget-content\"><span>Mes opérations régulières</span><table class=\"col-md-12\"><thead><tr><th>Motif</th><th>Montant moyen</th><th>&nbsp;</th><th>&nbsp;</th></tr></thead><tbody id=\"regular-operations\"></tbody></table></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<td>' + escape((interp = (model.get(\"rules\")).queryPattern) == null ? '' : interp) + '</td><td>' + escape((interp = (model.get(\"rules\")).textQueryMid) == null ? '' : interp) + '</td><td>');\n if (model.get(\"isBudgetPart\")) {\n{\nbuf.push('<input type=\"checkbox\" checked=\"true\" class=\"toogle-monthly-budget\"/>');\n}\n }\n else {\n{\nbuf.push('<input type=\"checkbox\" class=\"toogle-monthly-budget\"/>');\n}\n }\nbuf.push('</td><td><span aria-hidden=\"true\" data-icon=\"&#57512;\" class=\"fs1 remove-regular-operation red-text\"></span></td>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<ul><li class=\"menu-item active\"><span class=\"current-arrow\"></span><a href=\"#analyse-mensuelle\"><div class=\"icon\"><span aria-hidden=\"true\" data-icon=\"&#57802;\" class=\"fs1\"></span></div>Analyse mensuelle</a></li><li class=\"menu-item\"><a href=\"#budget-previsionnel\"><div class=\"icon\"><span aria-hidden=\"true\" data-icon=\"&#57802;\" class=\"fs1\"></span></div>Budget prévisionnel</a></li><li class=\"menu-item\"><a href=\"#analyse-mensuelle-comparee\"><div class=\"icon\"><span aria-hidden=\"true\" data-icon=\"&#57802;\" class=\"fs1\"></span><span aria-hidden=\"true\" data-icon=\"&#57802;\" class=\"fs1\"></span></div>Analyse mensuelle comparée</a></li><li class=\"menu-item\"><a href=\"#achats-en-ligne\"><div class=\"icon\"><span aria-hidden=\"true\" data-icon=\"&#57398;\" class=\"fs1\"></span></div>Achats en ligne</a></li><li class=\"menu-item\"><a href=\"#alertes\"><div class=\"icon\"><span aria-hidden=\"true\" data-icon=\"&#57803;\" class=\"fs1\"></span></div>Alertes</a></li><li class=\"menu-item\"><a href=\"#parametres\"><div class=\"icon\"><span aria-hidden=\"true\" data-icon=\"&#57486;\" class=\"fs1\"></span></div>Paramètres</a></li></ul>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<h1><span aria-hidden=\"true\" data-icon=\"&#57613;\" class=\"month-switcher previous-month pull-left fs1\"></span><span id=\"current-month\">Analyse mensuelle</span><span aria-hidden=\"true\" data-icon=\"&#57614;\" class=\"month-switcher next-month pull-right fs1\"></span></h1><table id=\"monthly-report\"><tr><td class=\"amount-month\"><div>solde de début de mois<hr/><span id=\"amount-month-start\" class=\"amount-number\"></span></div></td><td class=\"amount-month\"><div>solde de fin de mois<hr/><span id=\"amount-month-end\" class=\"amount-number\"></span><br/><span id=\"amount-month-differential\" class=\"blue-text amount-number-diff\"></span></div></td></tr><tr><td colspan=\"2\" class=\"search-panel-td1\"><div class=\"col-md-1\"></div><div class=\"search-panel col-md-10\"><div class=\"search-btn-container col-lg-5 col-md-6 col-sm-6\"><div id=\"credits-search-btn\" class=\"search-btn grey1\"><span aria-hidden=\"true\" data-icon=\"&#57602;\" class=\"pull-left fs1 big-size-icon\"></span><span id=\"credits-sum\" class=\"pull-right big-size-text\">0 &euro;</span><br/><span class=\"pull-right little-size-text\">Crédits</span></div></div><div class=\"col-lg-2 search-separator\"></div><div class=\"search-btn-container col-lg-5 col-md-6 col-sm-6\"><div id=\"debits-search-btn\" class=\"search-btn grey2\"><span aria-hidden=\"true\" data-icon=\"&#57601;\" class=\"pull-left fs1 big-size-icon\"></span><span id=\"debits-sum\" class=\"pull-right big-size-text\">0 &euro;</span><br/><span class=\"pull-right little-size-text\">Débits</span></div></div></div><div class=\"col-md-1\"></div></td></tr><tr><td colspan=\"2\" class=\"search-panel-td2\"><div class=\"col-md-1\"></div><div class=\"search-panel col-md-10\"><div class=\"search-btn-container col-lg-5 col-md-6 col-sm-6\"><div id=\"fixed-cost-search-btn\" class=\"search-btn grey3\"><span aria-hidden=\"true\" data-icon=\"&#57481;\" class=\"pull-left fs1 big-size-icon\"></span><span id=\"fixed-cost-sum\" class=\"pull-right big-size-text\">0 &euro;</span><br/><span class=\"pull-right little-size-text\">Frais fixes</span></div></div><div class=\"col-lg-2 search-separator\"></div><div class=\"search-btn-container col-lg-5 col-md-6 col-sm-6\"><div id=\"variable-cost-search-btn\" class=\"search-btn grey4\"><span aria-hidden=\"true\" data-icon=\"&#57393;\" class=\"pull-left fs1 big-size-icon\"></span><span id=\"variable-cost-sum\" class=\"pull-right big-size-text\">0 &euro;</span><br/><span class=\"pull-right little-size-text\">Dépenses</span></div></div></div><div class=\"col-md-1\"></div></td></tr><tr><td colspan=\"2\" class=\"google-pie-chart\"><div id=\"pie_chart\" style=\"min-height:180px;margin:auto;\">&nbsp;</div><br/><br/></td></tr></table>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<h1>Achats en ligne</h1><div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<br/><br/><p class=\"loading\"></p>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<td class=\"operation-title\">' + escape((interp = model.get('title')) == null ? '' : interp) + '</td><td class=\"operation-amount text-right\">' + escape((interp = Number(model.get('amount')).money()) == null ? '' : interp) + '</td><td class=\"text-right\"><div class=\"popup-container\"><span');\nbuf.push(attrs({ 'aria-hidden':(\"true\"), 'data-icon':(\"\" + (model.costIcon) + \"\"), \"class\": ('fs1') + ' ' + ('iconCostType') + ' ' + (\"\" + (model.costClass) + \"\") }, {\"class\":true,\"aria-hidden\":true,\"data-icon\":true}));\nbuf.push('></span></div></td>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<h2>Relevé du ' + escape((interp = model.get('title')) == null ? '' : interp) + ' ' + escape((interp = model.get(\"accountNumber\")) == null ? '' : interp) + '</h2><div id=\"search-field-regular-operations\"><span>Motif:</span><input id=\"search-regular-operations\"/><span>&nbsp&nbsp;Min:</span><input id=\"search-min-amount\" class=\"input-small\"/><span>&nbsp&nbsp;Max:</span><input id=\"search-max-amount\" class=\"input-small\"/><span id=\"empty-search-regular-operations\">X</span></div><div id=\"loader-regular-operations\" class=\"text-center loading\"><img src=\"./loader_big_blue.gif\"/></div><div><button type=\"button\" disabled=\"true\" class=\"add-regular-operation\">Ajouter aux opérations régulières</button></div><table class=\"table table-bordered table-condensed table-striped table-hover table-bordered dataTable\"><tbody id=\"table-regular-operations\"></tbody></table>');\n}\nreturn buf.join(\"\");\n};"]}